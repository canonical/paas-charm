09:14:03 [32mINFO[0m cli: juju status --model testing --format json
09:14:03 [32mINFO[0m cli: juju status --model testing --format json
09:14:03 [32mINFO[0m cli: juju deploy --model testing postgresql-k8s --base ubuntu@22.04 --channel 14/edge --config profile=testing --config plugin_hstore_enable=true --config plugin_pg_trgm_enable=true --trust
09:14:05 [32mINFO[0m cli: juju deploy --model testing openfga-k8s --channel latest/stable
09:14:07 [32mINFO[0m cli: juju integrate --model testing openfga-k8s postgresql-k8s:database
09:14:08 [32mINFO[0m wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-f2eaa-microk8s'
+ .model.cloud = 'microk8s'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .apps['openfga-k8s'].charm = 'openfga-k8s'
+ .apps['openfga-k8s'].charm_origin = 'charmhub'
+ .apps['openfga-k8s'].charm_name = 'openfga-k8s'
+ .apps['openfga-k8s'].charm_rev = 128
+ .apps['openfga-k8s'].exposed = False
+ .apps['openfga-k8s'].base.name = 'ubuntu'
+ .apps['openfga-k8s'].base.channel = '22.04'
+ .apps['openfga-k8s'].charm_channel = 'latest/stable'
+ .apps['openfga-k8s'].scale = 1
+ .apps['openfga-k8s'].app_status.current = 'waiting'
+ .apps['openfga-k8s'].app_status.message = 'installing agent'
+ .apps['openfga-k8s'].relations['database'][0].related_app = 'postgresql-k8s'
+ .apps['openfga-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['openfga-k8s'].relations['database'][0].scope = 'global'
+ .apps['openfga-k8s'].relations['peer'][0].related_app = 'openfga-k8s'
+ .apps['openfga-k8s'].relations['peer'][0].interface = 'openfga-peer'
+ .apps['openfga-k8s'].relations['peer'][0].scope = 'global'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'waiting'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.message = 'installing agent'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'allocating'
+ .apps['openfga-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['grpc-ingress'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['http-ingress'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['peer'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['send-ca-cert'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 684
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/edge'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'openfga-k8s'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing agent'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'allocating'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'pending'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 0
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'pgdata/0'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = ''
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'pending'
+ .storage.volumes['0'].size = 0
+ .storage.volumes['0'].persistent = False
+ .storage.volumes['0'].storage = 'pgdata/0'
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'pending'
09:14:12 [32mINFO[0m wait: status changed:
+ .apps['postgresql-k8s'].provider_id = '6231d2fc-f4c1-4269-9534-d298345cd26a'
+ .apps['postgresql-k8s'].address = '10.152.183.230'
09:14:20 [32mINFO[0m wait: status changed:
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
09:14:21 [32mINFO[0m wait: status changed:
+ .apps['openfga-k8s'].units['openfga-k8s/0'].provider_id = 'openfga-k8s-0'
09:14:22 [32mINFO[0m wait: status changed:
+ .apps['openfga-k8s'].provider_id = '49379dfb-2df8-427d-9941-3a73c6ede3be'
+ .apps['openfga-k8s'].address = '10.152.183.144'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].address = '10.1.181.140'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.181.139'
- .storage.storage['pgdata/0'].status.current = 'pending'
+ .storage.storage['pgdata/0'].status.current = 'attached'
+ .storage.storage['pgdata/0'].status.message = 'Successfully provisioned volume pvc-0572a46f-8092-4e56-9c5a-81df8070ace5'
- .storage.filesystems['0'].size = 0
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = '0572a46f-8092-4e56-9c5a-81df8070ace5'
- .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = ''
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['0'].pool = 'kubernetes'
- .storage.filesystems['0'].status.current = 'pending'
- .storage.volumes['0'].size = 0
- .storage.volumes['0'].persistent = False
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.volumes['0'].pool = 'kubernetes'
- .storage.volumes['0'].status.current = 'pending'
+ .storage.volumes['0'].status.current = 'attached'
09:14:26 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].app_status.message = 'installing agent'
+ .apps['openfga-k8s'].app_status.message = 'agent initialising'
- .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.message = 'installing agent'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.message = 'agent initialising'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.version = '3.6.11'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].leader = True
- .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].app_status.message = 'agent initialising'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing agent'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'agent initialising'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
09:14:30 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].app_status.current = 'waiting'
- .apps['openfga-k8s'].app_status.message = 'agent initialising'
+ .apps['openfga-k8s'].app_status.current = 'maintenance'
+ .apps['openfga-k8s'].app_status.message = 'installing charm software'
- .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'waiting'
- .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.message = 'agent initialising'
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'allocating'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'maintenance'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'executing'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running install hook'
09:14:31 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'waiting'
- .apps['postgresql-k8s'].app_status.message = 'agent initialising'
+ .apps['postgresql-k8s'].app_status.current = 'maintenance'
+ .apps['postgresql-k8s'].app_status.message = 'installing charm software'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'agent initialising'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'allocating'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'maintenance'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running install hook'
09:14:33 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running install hook'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running peer-relation-created hook'
09:14:34 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running peer-relation-created hook'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running database-relation-created hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running install hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-created hook'
09:14:35 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].app_status.current = 'maintenance'
- .apps['openfga-k8s'].app_status.message = 'installing charm software'
+ .apps['openfga-k8s'].app_status.current = 'waiting'
+ .apps['openfga-k8s'].app_status.message = 'Waiting for database creation'
- .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'maintenance'
- .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.message = 'installing charm software'
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'executing'
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running database-relation-created hook'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'waiting'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.message = 'Waiting for database creation'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'idle'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running restart-relation-created hook'
09:14:37 [32mINFO[0m wait: status changed:
+ .apps['openfga-k8s'].version = 'v1.8.4'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running restart-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-created hook'
09:14:38 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].app_status.current = 'waiting'
- .apps['openfga-k8s'].app_status.message = 'Waiting for database creation'
+ .apps['openfga-k8s'].app_status.current = 'blocked'
+ .apps['openfga-k8s'].app_status.message = 'Kubernetes resources patch failed: `juju trust` this application. statefulsets.apps "openfga-k8s" is forbidden: User "system:serviceaccount:testing:openfga-k8s" cannot get resource "statefulsets" in API group "apps" in the namespace "testing"'
- .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'waiting'
- .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.message = 'Waiting for database creation'
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'idle'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'blocked'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.message = 'Kubernetes resources patch failed: `juju trust` this application. statefulsets.apps "openfga-k8s" is forbidden: User "system:serviceaccount:testing:openfga-k8s" cannot get resource "statefulsets" in API group "apps" in the namespace "testing"'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'executing'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running start hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-created hook'
09:14:39 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].app_status.current = 'blocked'
- .apps['openfga-k8s'].app_status.message = 'Kubernetes resources patch failed: `juju trust` this application. statefulsets.apps "openfga-k8s" is forbidden: User "system:serviceaccount:testing:openfga-k8s" cannot get resource "statefulsets" in API group "apps" in the namespace "testing"'
+ .apps['openfga-k8s'].app_status.current = 'waiting'
+ .apps['openfga-k8s'].app_status.message = 'Waiting for database creation'
- .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'blocked'
- .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.message = 'Kubernetes resources patch failed: `juju trust` this application. statefulsets.apps "openfga-k8s" is forbidden: User "system:serviceaccount:testing:openfga-k8s" cannot get resource "statefulsets" in API group "apps" in the namespace "testing"'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'waiting'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.message = 'Waiting for database creation'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running leader-elected hook'
09:14:41 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running start hook'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running database-relation-changed hook for postgresql-k8s/0'
09:14:42 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running database-relation-changed hook for postgresql-k8s/0'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running peer-relation-changed hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running leader-elected hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running pgdata-storage-attached hook'
09:14:43 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'executing'
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running peer-relation-changed hook'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'idle'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running pgdata-storage-attached hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running config-changed hook'
09:14:45 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running config-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running start hook'
09:14:46 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'maintenance'
- .apps['postgresql-k8s'].app_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'installing agent'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'maintenance'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'unknown'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running start hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
09:14:47 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'idle'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'executing'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running database-relation-changed hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-joined hook for openfga-k8s/0'
09:14:48 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'executing'
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running database-relation-changed hook'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'idle'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-joined hook for openfga-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for openfga-k8s/0'
09:14:50 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for openfga-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-changed hook'
09:14:56 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
09:15:02 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].app_status.message = 'awaiting for primary endpoint to be ready'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'unknown'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for primary endpoint to be ready'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running postgresql-pebble-ready hook'
09:15:13 [32mINFO[0m wait: status changed:
+ .apps['postgresql-k8s'].version = '14.19'
09:15:14 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.message = 'awaiting for primary endpoint to be ready'
+ .apps['postgresql-k8s'].app_status.message = 'awaiting for cluster to start'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for primary endpoint to be ready'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for cluster to start'
09:15:16 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'idle'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'executing'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running database-relation-changed hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running postgresql-pebble-ready hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
09:15:17 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'executing'
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running database-relation-changed hook'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'idle'
09:15:30 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.message = 'awaiting for cluster to start'
+ .apps['postgresql-k8s'].app_status.message = 'installing agent'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for cluster to start'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
09:15:32 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for openfga-k8s/0'
09:15:33 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'waiting'
- .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].app_status.message = 'Primary'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for openfga-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
09:15:37 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.message = 'Primary'
09:15:38 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'idle'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'executing'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running database-relation-changed hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-changed hook'
09:15:39 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].app_status.message = 'Waiting for database creation'
+ .apps['openfga-k8s'].app_status.message = 'installing agent'
- .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'waiting'
- .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.message = 'Waiting for database creation'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'active'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
09:15:41 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running database-relation-changed hook'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running peer-relation-changed hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for openfga-k8s/0'
09:15:42 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'executing'
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running peer-relation-changed hook'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'idle'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for openfga-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
09:15:48 [32mINFO[0m wait: status changed:
- .apps['openfga-k8s'].app_status.current = 'waiting'
- .apps['openfga-k8s'].app_status.message = 'installing agent'
+ .apps['openfga-k8s'].app_status.current = 'active'
09:15:50 [33mWARNING[0m unexpected facade SSHServer received from the controller
09:15:50 [32mINFO[0m Connecting to existing model github-pr-f2eaa-microk8s:testing on unspecified cloud
09:15:50 [33mWARNING[0m unexpected facade SSHServer received from the controller
09:15:50 [33mWARNING[0m unexpected facade SSHSession received from the controller
09:15:50 [33mWARNING[0m unexpected facade SSHTunneler received from the controller
09:15:50 [33mWARNING[0m unexpected facade SSHServer received from the controller
09:15:51 [33mWARNING[0m unexpected facade SSHServer received from the controller
09:15:54 [32mINFO[0m Deploying ch:amd64/jammy/postgresql-k8s-684
09:15:56 [32mINFO[0m Application 'postgresql-k8s' already exists
09:15:56 [32mINFO[0m cli: juju deploy --model testing /home/runner/work/paas-charm/paas-charm/flask-k8s_ubuntu-22.04-amd64.charm --resource flask-app-image=ghcr.io/canonical/test-flask:ac29e1faf47d5a93c86a5a026bb1906edc2b2fff-_0.1_amd64
09:15:59 [32mINFO[0m wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-f2eaa-microk8s'
+ .model.cloud = 'microk8s'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .apps['flask-k8s'].charm = 'local:flask-k8s-0'
+ .apps['flask-k8s'].charm_origin = 'local'
+ .apps['flask-k8s'].charm_name = 'flask-k8s'
+ .apps['flask-k8s'].charm_rev = 0
+ .apps['flask-k8s'].exposed = False
+ .apps['flask-k8s'].base.name = 'ubuntu'
+ .apps['flask-k8s'].base.channel = '22.04'
+ .apps['flask-k8s'].scale = 1
+ .apps['flask-k8s'].app_status.current = 'waiting'
+ .apps['flask-k8s'].app_status.message = 'installing agent'
+ .apps['flask-k8s'].relations['secret-storage'][0].related_app = 'flask-k8s'
+ .apps['flask-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['flask-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'waiting'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'installing agent'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'allocating'
+ .apps['flask-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['openfga-k8s'].charm = 'openfga-k8s'
+ .apps['openfga-k8s'].charm_origin = 'charmhub'
+ .apps['openfga-k8s'].charm_name = 'openfga-k8s'
+ .apps['openfga-k8s'].charm_rev = 128
+ .apps['openfga-k8s'].exposed = False
+ .apps['openfga-k8s'].base.name = 'ubuntu'
+ .apps['openfga-k8s'].base.channel = '22.04'
+ .apps['openfga-k8s'].charm_channel = 'latest/stable'
+ .apps['openfga-k8s'].scale = 1
+ .apps['openfga-k8s'].provider_id = '49379dfb-2df8-427d-9941-3a73c6ede3be'
+ .apps['openfga-k8s'].address = '10.152.183.144'
+ .apps['openfga-k8s'].app_status.current = 'active'
+ .apps['openfga-k8s'].relations['database'][0].related_app = 'postgresql-k8s'
+ .apps['openfga-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['openfga-k8s'].relations['database'][0].scope = 'global'
+ .apps['openfga-k8s'].relations['peer'][0].related_app = 'openfga-k8s'
+ .apps['openfga-k8s'].relations['peer'][0].interface = 'openfga-peer'
+ .apps['openfga-k8s'].relations['peer'][0].scope = 'global'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'active'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'idle'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.version = '3.6.11'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].leader = True
+ .apps['openfga-k8s'].units['openfga-k8s/0'].address = '10.1.181.140'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].provider_id = 'openfga-k8s-0'
+ .apps['openfga-k8s'].version = 'v1.8.4'
+ .apps['openfga-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['grpc-ingress'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['http-ingress'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['peer'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['send-ca-cert'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 684
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/edge'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].provider_id = '6231d2fc-f4c1-4269-9534-d298345cd26a'
+ .apps['postgresql-k8s'].address = '10.152.183.230'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'openfga-k8s'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.181.139'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['postgresql-k8s'].version = '14.19'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'attached'
+ .storage.storage['pgdata/0'].status.message = 'Successfully provisioned volume pvc-0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = '0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'pgdata/0'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.volumes['0'].storage = 'pgdata/0'
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
09:16:03 [32mINFO[0m wait: status changed:
+ .apps['flask-k8s'].provider_id = '7afab9a7-59be-4fe5-8256-db12530787cc'
+ .apps['flask-k8s'].address = '10.152.183.116'
09:16:04 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running commands'
09:16:05 [32mINFO[0m wait: status changed:
+ .apps['flask-k8s'].units['flask-k8s/0'].provider_id = 'flask-k8s-0'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running commands'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
09:16:06 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].app_status.message = 'installing agent'
+ .apps['flask-k8s'].app_status.message = 'agent initialising'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'installing agent'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'agent initialising'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.version = '3.6.11'
+ .apps['flask-k8s'].units['flask-k8s/0'].leader = True
+ .apps['flask-k8s'].units['flask-k8s/0'].address = '10.1.181.141'
09:16:08 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].app_status.current = 'waiting'
- .apps['flask-k8s'].app_status.message = 'agent initialising'
+ .apps['flask-k8s'].app_status.current = 'maintenance'
+ .apps['flask-k8s'].app_status.message = 'installing charm software'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'waiting'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'agent initialising'
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'allocating'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'maintenance'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'executing'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running install hook'
09:16:10 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running install hook'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running leader-elected hook'
09:16:12 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].app_status.current = 'maintenance'
- .apps['flask-k8s'].app_status.message = 'installing charm software'
+ .apps['flask-k8s'].app_status.current = 'waiting'
+ .apps['flask-k8s'].app_status.message = 'Waiting for pebble ready'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'maintenance'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'waiting'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'Waiting for pebble ready'
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running leader-elected hook'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running start hook'
09:16:13 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running start hook'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running flask-app-pebble-ready hook'
09:16:14 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].app_status.current = 'waiting'
- .apps['flask-k8s'].app_status.message = 'Waiting for pebble ready'
+ .apps['flask-k8s'].app_status.current = 'maintenance'
+ .apps['flask-k8s'].app_status.message = 'Preparing service for restart'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'waiting'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'Waiting for pebble ready'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'maintenance'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'Preparing service for restart'
09:16:16 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].app_status.current = 'maintenance'
- .apps['flask-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['flask-k8s'].app_status.current = 'waiting'
+ .apps['flask-k8s'].app_status.message = 'installing agent'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'maintenance'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'executing'
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running flask-app-pebble-ready hook'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'active'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'idle'
09:16:17 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].app_status.current = 'waiting'
- .apps['flask-k8s'].app_status.message = 'installing agent'
+ .apps['flask-k8s'].app_status.current = 'maintenance'
+ .apps['flask-k8s'].app_status.message = 'Preparing service for restart'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'active'
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'idle'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'maintenance'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'executing'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running secret-storage-relation-changed hook'
09:16:18 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].app_status.current = 'maintenance'
- .apps['flask-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['flask-k8s'].app_status.current = 'waiting'
+ .apps['flask-k8s'].app_status.message = 'installing agent'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'maintenance'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'executing'
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running secret-storage-relation-changed hook'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'active'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'idle'
09:16:28 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].app_status.current = 'waiting'
- .apps['flask-k8s'].app_status.message = 'installing agent'
+ .apps['flask-k8s'].app_status.current = 'active'
09:16:30 [32mINFO[0m wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-f2eaa-microk8s'
+ .model.cloud = 'microk8s'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .apps['flask-k8s'].charm = 'local:flask-k8s-0'
+ .apps['flask-k8s'].charm_origin = 'local'
+ .apps['flask-k8s'].charm_name = 'flask-k8s'
+ .apps['flask-k8s'].charm_rev = 0
+ .apps['flask-k8s'].exposed = False
+ .apps['flask-k8s'].base.name = 'ubuntu'
+ .apps['flask-k8s'].base.channel = '22.04'
+ .apps['flask-k8s'].scale = 1
+ .apps['flask-k8s'].provider_id = '7afab9a7-59be-4fe5-8256-db12530787cc'
+ .apps['flask-k8s'].address = '10.152.183.116'
+ .apps['flask-k8s'].app_status.current = 'active'
+ .apps['flask-k8s'].relations['secret-storage'][0].related_app = 'flask-k8s'
+ .apps['flask-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['flask-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'active'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'idle'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.version = '3.6.11'
+ .apps['flask-k8s'].units['flask-k8s/0'].leader = True
+ .apps['flask-k8s'].units['flask-k8s/0'].address = '10.1.181.141'
+ .apps['flask-k8s'].units['flask-k8s/0'].provider_id = 'flask-k8s-0'
+ .apps['flask-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['openfga-k8s'].charm = 'openfga-k8s'
+ .apps['openfga-k8s'].charm_origin = 'charmhub'
+ .apps['openfga-k8s'].charm_name = 'openfga-k8s'
+ .apps['openfga-k8s'].charm_rev = 128
+ .apps['openfga-k8s'].exposed = False
+ .apps['openfga-k8s'].base.name = 'ubuntu'
+ .apps['openfga-k8s'].base.channel = '22.04'
+ .apps['openfga-k8s'].charm_channel = 'latest/stable'
+ .apps['openfga-k8s'].scale = 1
+ .apps['openfga-k8s'].provider_id = '49379dfb-2df8-427d-9941-3a73c6ede3be'
+ .apps['openfga-k8s'].address = '10.152.183.144'
+ .apps['openfga-k8s'].app_status.current = 'active'
+ .apps['openfga-k8s'].relations['database'][0].related_app = 'postgresql-k8s'
+ .apps['openfga-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['openfga-k8s'].relations['database'][0].scope = 'global'
+ .apps['openfga-k8s'].relations['peer'][0].related_app = 'openfga-k8s'
+ .apps['openfga-k8s'].relations['peer'][0].interface = 'openfga-peer'
+ .apps['openfga-k8s'].relations['peer'][0].scope = 'global'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'active'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'idle'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.version = '3.6.11'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].leader = True
+ .apps['openfga-k8s'].units['openfga-k8s/0'].address = '10.1.181.140'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].provider_id = 'openfga-k8s-0'
+ .apps['openfga-k8s'].version = 'v1.8.4'
+ .apps['openfga-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['grpc-ingress'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['http-ingress'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['peer'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['send-ca-cert'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 684
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/edge'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].provider_id = '6231d2fc-f4c1-4269-9534-d298345cd26a'
+ .apps['postgresql-k8s'].address = '10.152.183.230'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'openfga-k8s'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.181.139'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['postgresql-k8s'].version = '14.19'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'attached'
+ .storage.storage['pgdata/0'].status.message = 'Successfully provisioned volume pvc-0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = '0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'pgdata/0'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.volumes['0'].storage = 'pgdata/0'
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
09:16:33 [32mINFO[0m cli: juju integrate --model testing flask-k8s openfga-k8s:openfga
09:16:33 [32mINFO[0m wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-f2eaa-microk8s'
+ .model.cloud = 'microk8s'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .apps['flask-k8s'].charm = 'local:flask-k8s-0'
+ .apps['flask-k8s'].charm_origin = 'local'
+ .apps['flask-k8s'].charm_name = 'flask-k8s'
+ .apps['flask-k8s'].charm_rev = 0
+ .apps['flask-k8s'].exposed = False
+ .apps['flask-k8s'].base.name = 'ubuntu'
+ .apps['flask-k8s'].base.channel = '22.04'
+ .apps['flask-k8s'].scale = 1
+ .apps['flask-k8s'].provider_id = '7afab9a7-59be-4fe5-8256-db12530787cc'
+ .apps['flask-k8s'].address = '10.152.183.116'
+ .apps['flask-k8s'].app_status.current = 'active'
+ .apps['flask-k8s'].relations['openfga'][0].related_app = 'openfga-k8s'
+ .apps['flask-k8s'].relations['openfga'][0].interface = 'openfga'
+ .apps['flask-k8s'].relations['openfga'][0].scope = 'global'
+ .apps['flask-k8s'].relations['secret-storage'][0].related_app = 'flask-k8s'
+ .apps['flask-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['flask-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'active'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'executing'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running openfga-relation-created hook'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.version = '3.6.11'
+ .apps['flask-k8s'].units['flask-k8s/0'].leader = True
+ .apps['flask-k8s'].units['flask-k8s/0'].address = '10.1.181.141'
+ .apps['flask-k8s'].units['flask-k8s/0'].provider_id = 'flask-k8s-0'
+ .apps['flask-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['openfga-k8s'].charm = 'openfga-k8s'
+ .apps['openfga-k8s'].charm_origin = 'charmhub'
+ .apps['openfga-k8s'].charm_name = 'openfga-k8s'
+ .apps['openfga-k8s'].charm_rev = 128
+ .apps['openfga-k8s'].exposed = False
+ .apps['openfga-k8s'].base.name = 'ubuntu'
+ .apps['openfga-k8s'].base.channel = '22.04'
+ .apps['openfga-k8s'].charm_channel = 'latest/stable'
+ .apps['openfga-k8s'].scale = 1
+ .apps['openfga-k8s'].provider_id = '49379dfb-2df8-427d-9941-3a73c6ede3be'
+ .apps['openfga-k8s'].address = '10.152.183.144'
+ .apps['openfga-k8s'].app_status.current = 'active'
+ .apps['openfga-k8s'].relations['database'][0].related_app = 'postgresql-k8s'
+ .apps['openfga-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['openfga-k8s'].relations['database'][0].scope = 'global'
+ .apps['openfga-k8s'].relations['openfga'][0].related_app = 'flask-k8s'
+ .apps['openfga-k8s'].relations['openfga'][0].interface = 'openfga'
+ .apps['openfga-k8s'].relations['openfga'][0].scope = 'global'
+ .apps['openfga-k8s'].relations['peer'][0].related_app = 'openfga-k8s'
+ .apps['openfga-k8s'].relations['peer'][0].interface = 'openfga-peer'
+ .apps['openfga-k8s'].relations['peer'][0].scope = 'global'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].workload_status.current = 'active'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.current = 'executing'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running openfga-relation-created hook'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.version = '3.6.11'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].leader = True
+ .apps['openfga-k8s'].units['openfga-k8s/0'].address = '10.1.181.140'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].provider_id = 'openfga-k8s-0'
+ .apps['openfga-k8s'].version = 'v1.8.4'
+ .apps['openfga-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['grpc-ingress'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['http-ingress'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['peer'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['send-ca-cert'] = 'alpha'
+ .apps['openfga-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 684
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/edge'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].provider_id = '6231d2fc-f4c1-4269-9534-d298345cd26a'
+ .apps['postgresql-k8s'].address = '10.152.183.230'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'openfga-k8s'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.181.139'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['postgresql-k8s'].version = '14.19'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'attached'
+ .storage.storage['pgdata/0'].status.message = 'Successfully provisioned volume pvc-0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = '0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'pgdata/0'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-0572a46f-8092-4e56-9c5a-81df8070ace5'
+ .storage.volumes['0'].storage = 'pgdata/0'
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
09:16:35 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running openfga-relation-created hook'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running openfga-relation-joined hook for openfga-k8s/0'
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running openfga-relation-created hook'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running openfga-relation-changed hook'
09:16:36 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running openfga-relation-joined hook for openfga-k8s/0'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running openfga-relation-changed hook'
- .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running openfga-relation-changed hook'
+ .apps['openfga-k8s'].units['openfga-k8s/0'].juju_status.message = 'running openfga-relation-joined hook for flask-k8s/0'
09:16:36 [32mINFO[0m cli: juju status --model testing --format json