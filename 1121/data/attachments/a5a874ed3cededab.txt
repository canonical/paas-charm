11:51:00 [32mINFO[0m cli: juju deploy --model testing postgresql-k8s --base ubuntu@22.04 --channel 14/edge --config profile=testing --config plugin_hstore_enable=true --config plugin_pg_trgm_enable=true --trust
11:51:03 [32mINFO[0m cli: juju deploy --model testing /home/runner/work/paas-charm/paas-charm/spring-boot-k8s_amd64.charm spring-boot-k8s --resource app-image=ghcr.io/canonical/paas-spring-boot-app:c0b1a2b123e28186347616ed0a6ab9d3b870361c-_0.1_amd64
11:51:06 [32mINFO[0m cli: juju integrate --model testing spring-boot-k8s postgresql-k8s:database
11:51:06 [32mINFO[0m wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-aadc8-microk8s'
+ .model.cloud = 'microk8s'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .apps['flask-k8s'].charm = 'local:flask-k8s-0'
+ .apps['flask-k8s'].charm_origin = 'local'
+ .apps['flask-k8s'].charm_name = 'flask-k8s'
+ .apps['flask-k8s'].charm_rev = 0
+ .apps['flask-k8s'].exposed = False
+ .apps['flask-k8s'].base.name = 'ubuntu'
+ .apps['flask-k8s'].base.channel = '22.04'
+ .apps['flask-k8s'].scale = 1
+ .apps['flask-k8s'].provider_id = '9d8267f0-71f4-4531-b1dc-ce2066dfa139'
+ .apps['flask-k8s'].address = '10.152.183.62'
+ .apps['flask-k8s'].app_status.current = 'maintenance'
+ .apps['flask-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['flask-k8s'].relations['rabbitmq'][0].related_app = 'rabbitmq-k8s'
+ .apps['flask-k8s'].relations['rabbitmq'][0].interface = 'rabbitmq'
+ .apps['flask-k8s'].relations['rabbitmq'][0].scope = 'global'
+ .apps['flask-k8s'].relations['secret-storage'][0].related_app = 'flask-k8s'
+ .apps['flask-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['flask-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'maintenance'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'executing'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running rabbitmq-relation-broken hook'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.version = '3.6.11'
+ .apps['flask-k8s'].units['flask-k8s/0'].leader = True
+ .apps['flask-k8s'].units['flask-k8s/0'].address = '10.1.110.138'
+ .apps['flask-k8s'].units['flask-k8s/0'].provider_id = 'flask-k8s-0'
+ .apps['flask-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 684
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/edge'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'spring-boot-k8s'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing agent'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'allocating'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['rabbitmq-k8s'].charm = 'rabbitmq-k8s'
+ .apps['rabbitmq-k8s'].charm_origin = 'charmhub'
+ .apps['rabbitmq-k8s'].charm_name = 'rabbitmq-k8s'
+ .apps['rabbitmq-k8s'].charm_rev = 54
+ .apps['rabbitmq-k8s'].exposed = False
+ .apps['rabbitmq-k8s'].base.name = 'ubuntu'
+ .apps['rabbitmq-k8s'].base.channel = '24.04'
+ .apps['rabbitmq-k8s'].charm_channel = '3.12/edge'
+ .apps['rabbitmq-k8s'].scale = 1
+ .apps['rabbitmq-k8s'].provider_id = 'ee6ac9a2-cbf2-4fb1-8306-a7ec911a94dc'
+ .apps['rabbitmq-k8s'].address = '10.152.183.29'
+ .apps['rabbitmq-k8s'].app_status.current = 'active'
+ .apps['rabbitmq-k8s'].relations['amqp'][0].related_app = 'flask-k8s'
+ .apps['rabbitmq-k8s'].relations['amqp'][0].interface = 'rabbitmq'
+ .apps['rabbitmq-k8s'].relations['amqp'][0].scope = 'global'
+ .apps['rabbitmq-k8s'].relations['peers'][0].related_app = 'rabbitmq-k8s'
+ .apps['rabbitmq-k8s'].relations['peers'][0].interface = 'rabbitmq-peer'
+ .apps['rabbitmq-k8s'].relations['peers'][0].scope = 'global'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].workload_status.current = 'active'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].juju_status.current = 'idle'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].juju_status.version = '3.6.11'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].leader = True
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].address = '10.1.110.140'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].provider_id = 'rabbitmq-k8s-0'
+ .apps['rabbitmq-k8s'].version = '3.12.1'
+ .apps['rabbitmq-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['rabbitmq-k8s'].endpoint_bindings['amqp'] = 'alpha'
+ .apps['rabbitmq-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['rabbitmq-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['rabbitmq-k8s'].endpoint_bindings['peers'] = 'alpha'
+ .apps['spring-boot-k8s'].charm = 'local:spring-boot-k8s-0'
+ .apps['spring-boot-k8s'].charm_origin = 'local'
+ .apps['spring-boot-k8s'].charm_name = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].charm_rev = 0
+ .apps['spring-boot-k8s'].exposed = False
+ .apps['spring-boot-k8s'].base.name = 'ubuntu'
+ .apps['spring-boot-k8s'].base.channel = '24.04'
+ .apps['spring-boot-k8s'].scale = 1
+ .apps['spring-boot-k8s'].app_status.current = 'waiting'
+ .apps['spring-boot-k8s'].app_status.message = 'installing agent'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].related_app = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'waiting'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'installing agent'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'allocating'
+ .apps['spring-boot-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .storage.storage['pgdata/1'].kind = 'filesystem'
+ .storage.storage['pgdata/1'].status.current = 'pending'
+ .storage.storage['pgdata/1'].persistent = False
+ .storage.storage['pgdata/1'].life = 'alive'
+ .storage.storage['pgdata/1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.storage['rabbitmq-data/0'].kind = 'filesystem'
+ .storage.storage['rabbitmq-data/0'].status.current = 'attached'
+ .storage.storage['rabbitmq-data/0'].status.message = 'Successfully provisioned volume pvc-6f8fc755-da17-44aa-908f-19e981dbccc1'
+ .storage.storage['rabbitmq-data/0'].persistent = False
+ .storage.storage['rabbitmq-data/0'].life = 'alive'
+ .storage.storage['rabbitmq-data/0'].attachments.units['rabbitmq-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = '6f8fc755-da17-44aa-908f-19e981dbccc1'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'rabbitmq-data/0'
+ .storage.filesystems['0'].attachments.containers['rabbitmq-k8s/0'].mount_point = '/var/lib/juju/storage/rabbitmq-data/0'
+ .storage.filesystems['0'].attachments.containers['rabbitmq-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['rabbitmq-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['rabbitmq-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-6f8fc755-da17-44aa-908f-19e981dbccc1'
+ .storage.filesystems['1'].size = 0
+ .storage.filesystems['1'].volume = '1'
+ .storage.filesystems['1'].storage = 'pgdata/1'
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].mount_point = ''
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['1'].life = 'alive'
+ .storage.filesystems['1'].status.current = 'pending'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-6f8fc755-da17-44aa-908f-19e981dbccc1'
+ .storage.volumes['0'].storage = 'rabbitmq-data/0'
+ .storage.volumes['0'].attachments.containers['rabbitmq-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['rabbitmq-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['rabbitmq-k8s/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
+ .storage.volumes['1'].size = 0
+ .storage.volumes['1'].persistent = False
+ .storage.volumes['1'].storage = 'pgdata/1'
+ .storage.volumes['1'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['1'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['1'].life = 'alive'
+ .storage.volumes['1'].status.current = 'pending'
11:51:10 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].app_status.current = 'maintenance'
- .apps['flask-k8s'].app_status.message = 'Preparing service for restart'
- .apps['flask-k8s'].relations['rabbitmq'][0].related_app = 'rabbitmq-k8s'
- .apps['flask-k8s'].relations['rabbitmq'][0].interface = 'rabbitmq'
- .apps['flask-k8s'].relations['rabbitmq'][0].scope = 'global'
+ .apps['flask-k8s'].app_status.current = 'active'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'maintenance'
- .apps['flask-k8s'].units['flask-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'executing'
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running rabbitmq-relation-broken hook'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'active'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'idle'
- .apps['rabbitmq-k8s'].relations['amqp'][0].related_app = 'flask-k8s'
- .apps['rabbitmq-k8s'].relations['amqp'][0].interface = 'rabbitmq'
- .apps['rabbitmq-k8s'].relations['amqp'][0].scope = 'global'
11:51:13 [32mINFO[0m wait: status changed:
+ .apps['spring-boot-k8s'].provider_id = '590fa6d8-ba2a-43a2-8679-bcdf680a950e'
+ .apps['spring-boot-k8s'].address = '10.152.183.196'
11:51:18 [32mINFO[0m wait: status changed:
+ .apps['postgresql-k8s'].provider_id = 'e766f5b3-bada-4116-9dac-5a4ebc89c8bb'
+ .apps['postgresql-k8s'].address = '10.152.183.119'
- .apps['spring-boot-k8s'].app_status.message = 'installing agent'
+ .apps['spring-boot-k8s'].app_status.message = 'agent initialising'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'installing agent'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'agent initialising'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.version = '3.6.11'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].leader = True
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].provider_id = 'spring-boot-k8s-0'
11:51:19 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].app_status.current = 'waiting'
- .apps['spring-boot-k8s'].app_status.message = 'agent initialising'
+ .apps['spring-boot-k8s'].app_status.current = 'maintenance'
+ .apps['spring-boot-k8s'].app_status.message = 'installing charm software'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'waiting'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'agent initialising'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'allocating'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'maintenance'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running install hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].address = '10.1.110.141'
11:51:21 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running install hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running secret-storage-relation-created hook'
11:51:23 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running secret-storage-relation-created hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running leader-elected hook'
11:51:24 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].app_status.message = 'installing charm software'
+ .apps['spring-boot-k8s'].app_status.message = 'Preparing service for restart'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running leader-elected hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running app-pebble-ready hook'
11:51:26 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].app_status.current = 'maintenance'
- .apps['spring-boot-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['spring-boot-k8s'].app_status.current = 'active'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'maintenance'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'active'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running app-pebble-ready hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running config-changed hook'
11:51:27 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running config-changed hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
11:51:29 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].app_status.message = 'agent initialising'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing agent'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'agent initialising'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
- .storage.storage['pgdata/1'].status.current = 'pending'
+ .storage.storage['pgdata/1'].status.current = 'attached'
+ .storage.storage['pgdata/1'].status.message = 'Successfully provisioned volume pvc-2307d8cc-6785-4acf-b6ee-f2e841d74d3b'
- .storage.filesystems['1'].size = 0
+ .storage.filesystems['1'].size = 1024
+ .storage.filesystems['1'].provider_id = '2307d8cc-6785-4acf-b6ee-f2e841d74d3b'
- .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].mount_point = ''
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['1'].pool = 'kubernetes'
- .storage.filesystems['1'].status.current = 'pending'
+ .storage.filesystems['1'].status.current = 'attached'
+ .storage.filesystems['1'].status.message = 'Successfully provisioned volume pvc-2307d8cc-6785-4acf-b6ee-f2e841d74d3b'
- .storage.volumes['1'].size = 0
- .storage.volumes['1'].persistent = False
+ .storage.volumes['1'].size = 1024
+ .storage.volumes['1'].persistent = True
+ .storage.volumes['1'].provider_id = 'pvc-2307d8cc-6785-4acf-b6ee-f2e841d74d3b'
+ .storage.volumes['1'].pool = 'kubernetes'
- .storage.volumes['1'].status.current = 'pending'
+ .storage.volumes['1'].status.current = 'attached'
11:51:31 [32mINFO[0m wait: status changed:
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.110.143'
11:51:34 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'waiting'
- .apps['postgresql-k8s'].app_status.message = 'agent initialising'
+ .apps['postgresql-k8s'].app_status.current = 'maintenance'
+ .apps['postgresql-k8s'].app_status.message = 'installing charm software'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'agent initialising'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'allocating'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'maintenance'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running install hook'
11:51:37 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running install hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-created hook'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-joined hook for postgresql-k8s/0'
11:51:39 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-created hook'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-joined hook for postgresql-k8s/0'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
11:51:42 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running restart-relation-created hook'
11:51:43 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running restart-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-created hook'
11:51:44 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running leader-elected hook'
11:51:47 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running leader-elected hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running pgdata-storage-attached hook'
11:51:49 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running pgdata-storage-attached hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running config-changed hook'
11:51:52 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running config-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running start hook'
11:51:53 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'maintenance'
- .apps['postgresql-k8s'].app_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'installing agent'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'maintenance'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'unknown'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running start hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
11:51:57 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-joined hook for spring-boot-k8s/0'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
11:51:58 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
11:51:59 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-joined hook for spring-boot-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for spring-boot-k8s/0'
11:52:00 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for spring-boot-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
11:52:02 [32mINFO[0m wait: status changed:
+ .apps['postgresql-k8s'].version = '14.19'
11:52:05 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].app_status.message = 'awaiting for cluster to start'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'unknown'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for cluster to start'
11:52:06 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-changed hook'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
11:52:08 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
11:52:09 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
11:52:22 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.message = 'awaiting for cluster to start'
+ .apps['postgresql-k8s'].app_status.message = 'Updating extensions'
11:52:23 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'waiting'
- .apps['postgresql-k8s'].app_status.message = 'Updating extensions'
+ .apps['postgresql-k8s'].app_status.current = 'active'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for cluster to start'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
11:52:24 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for spring-boot-k8s/0'
11:52:26 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for spring-boot-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
11:52:26 [32mINFO[0m cli: juju integrate --model testing spring-boot-k8s rabbitmq-k8s
11:52:26 [32mINFO[0m wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-aadc8-microk8s'
+ .model.cloud = 'microk8s'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .apps['flask-k8s'].charm = 'local:flask-k8s-0'
+ .apps['flask-k8s'].charm_origin = 'local'
+ .apps['flask-k8s'].charm_name = 'flask-k8s'
+ .apps['flask-k8s'].charm_rev = 0
+ .apps['flask-k8s'].exposed = False
+ .apps['flask-k8s'].base.name = 'ubuntu'
+ .apps['flask-k8s'].base.channel = '22.04'
+ .apps['flask-k8s'].scale = 1
+ .apps['flask-k8s'].provider_id = '9d8267f0-71f4-4531-b1dc-ce2066dfa139'
+ .apps['flask-k8s'].address = '10.152.183.62'
+ .apps['flask-k8s'].app_status.current = 'active'
+ .apps['flask-k8s'].relations['secret-storage'][0].related_app = 'flask-k8s'
+ .apps['flask-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['flask-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'active'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'idle'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.version = '3.6.11'
+ .apps['flask-k8s'].units['flask-k8s/0'].leader = True
+ .apps['flask-k8s'].units['flask-k8s/0'].address = '10.1.110.138'
+ .apps['flask-k8s'].units['flask-k8s/0'].provider_id = 'flask-k8s-0'
+ .apps['flask-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 684
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/edge'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].provider_id = 'e766f5b3-bada-4116-9dac-5a4ebc89c8bb'
+ .apps['postgresql-k8s'].address = '10.152.183.119'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'spring-boot-k8s'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.110.143'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['postgresql-k8s'].version = '14.19'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['rabbitmq-k8s'].charm = 'rabbitmq-k8s'
+ .apps['rabbitmq-k8s'].charm_origin = 'charmhub'
+ .apps['rabbitmq-k8s'].charm_name = 'rabbitmq-k8s'
+ .apps['rabbitmq-k8s'].charm_rev = 54
+ .apps['rabbitmq-k8s'].exposed = False
+ .apps['rabbitmq-k8s'].base.name = 'ubuntu'
+ .apps['rabbitmq-k8s'].base.channel = '24.04'
+ .apps['rabbitmq-k8s'].charm_channel = '3.12/edge'
+ .apps['rabbitmq-k8s'].scale = 1
+ .apps['rabbitmq-k8s'].provider_id = 'ee6ac9a2-cbf2-4fb1-8306-a7ec911a94dc'
+ .apps['rabbitmq-k8s'].address = '10.152.183.29'
+ .apps['rabbitmq-k8s'].app_status.current = 'active'
+ .apps['rabbitmq-k8s'].relations['amqp'][0].related_app = 'spring-boot-k8s'
+ .apps['rabbitmq-k8s'].relations['amqp'][0].interface = 'rabbitmq'
+ .apps['rabbitmq-k8s'].relations['amqp'][0].scope = 'global'
+ .apps['rabbitmq-k8s'].relations['peers'][0].related_app = 'rabbitmq-k8s'
+ .apps['rabbitmq-k8s'].relations['peers'][0].interface = 'rabbitmq-peer'
+ .apps['rabbitmq-k8s'].relations['peers'][0].scope = 'global'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].workload_status.current = 'active'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].juju_status.current = 'executing'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].juju_status.message = 'running amqp-relation-created hook'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].juju_status.version = '3.6.11'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].leader = True
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].address = '10.1.110.140'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].provider_id = 'rabbitmq-k8s-0'
+ .apps['rabbitmq-k8s'].version = '3.12.1'
+ .apps['rabbitmq-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['rabbitmq-k8s'].endpoint_bindings['amqp'] = 'alpha'
+ .apps['rabbitmq-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['rabbitmq-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['rabbitmq-k8s'].endpoint_bindings['peers'] = 'alpha'
+ .apps['spring-boot-k8s'].charm = 'local:spring-boot-k8s-0'
+ .apps['spring-boot-k8s'].charm_origin = 'local'
+ .apps['spring-boot-k8s'].charm_name = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].charm_rev = 0
+ .apps['spring-boot-k8s'].exposed = False
+ .apps['spring-boot-k8s'].base.name = 'ubuntu'
+ .apps['spring-boot-k8s'].base.channel = '24.04'
+ .apps['spring-boot-k8s'].scale = 1
+ .apps['spring-boot-k8s'].provider_id = '590fa6d8-ba2a-43a2-8679-bcdf680a950e'
+ .apps['spring-boot-k8s'].address = '10.152.183.196'
+ .apps['spring-boot-k8s'].app_status.current = 'active'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['spring-boot-k8s'].relations['rabbitmq'][0].related_app = 'rabbitmq-k8s'
+ .apps['spring-boot-k8s'].relations['rabbitmq'][0].interface = 'rabbitmq'
+ .apps['spring-boot-k8s'].relations['rabbitmq'][0].scope = 'global'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].related_app = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'active'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running rabbitmq-relation-created hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.version = '3.6.11'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].leader = True
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].address = '10.1.110.141'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].provider_id = 'spring-boot-k8s-0'
+ .apps['spring-boot-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .storage.storage['pgdata/1'].kind = 'filesystem'
+ .storage.storage['pgdata/1'].status.current = 'attached'
+ .storage.storage['pgdata/1'].status.message = 'Successfully provisioned volume pvc-2307d8cc-6785-4acf-b6ee-f2e841d74d3b'
+ .storage.storage['pgdata/1'].persistent = False
+ .storage.storage['pgdata/1'].life = 'alive'
+ .storage.storage['pgdata/1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.storage['rabbitmq-data/0'].kind = 'filesystem'
+ .storage.storage['rabbitmq-data/0'].status.current = 'attached'
+ .storage.storage['rabbitmq-data/0'].status.message = 'Successfully provisioned volume pvc-6f8fc755-da17-44aa-908f-19e981dbccc1'
+ .storage.storage['rabbitmq-data/0'].persistent = False
+ .storage.storage['rabbitmq-data/0'].life = 'alive'
+ .storage.storage['rabbitmq-data/0'].attachments.units['rabbitmq-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = '6f8fc755-da17-44aa-908f-19e981dbccc1'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'rabbitmq-data/0'
+ .storage.filesystems['0'].attachments.containers['rabbitmq-k8s/0'].mount_point = '/var/lib/juju/storage/rabbitmq-data/0'
+ .storage.filesystems['0'].attachments.containers['rabbitmq-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['rabbitmq-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['rabbitmq-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-6f8fc755-da17-44aa-908f-19e981dbccc1'
+ .storage.filesystems['1'].size = 1024
+ .storage.filesystems['1'].provider_id = '2307d8cc-6785-4acf-b6ee-f2e841d74d3b'
+ .storage.filesystems['1'].volume = '1'
+ .storage.filesystems['1'].storage = 'pgdata/1'
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['1'].pool = 'kubernetes'
+ .storage.filesystems['1'].life = 'alive'
+ .storage.filesystems['1'].status.current = 'attached'
+ .storage.filesystems['1'].status.message = 'Successfully provisioned volume pvc-2307d8cc-6785-4acf-b6ee-f2e841d74d3b'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-6f8fc755-da17-44aa-908f-19e981dbccc1'
+ .storage.volumes['0'].storage = 'rabbitmq-data/0'
+ .storage.volumes['0'].attachments.containers['rabbitmq-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['rabbitmq-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['rabbitmq-k8s/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
+ .storage.volumes['1'].size = 1024
+ .storage.volumes['1'].persistent = True
+ .storage.volumes['1'].provider_id = 'pvc-2307d8cc-6785-4acf-b6ee-f2e841d74d3b'
+ .storage.volumes['1'].storage = 'pgdata/1'
+ .storage.volumes['1'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['1'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['1'].pool = 'kubernetes'
+ .storage.volumes['1'].life = 'alive'
+ .storage.volumes['1'].status.current = 'attached'
11:52:57 [32mINFO[0m wait: status changed:
- .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].juju_status.current = 'executing'
- .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].juju_status.message = 'running amqp-relation-created hook'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].juju_status.current = 'idle'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running rabbitmq-relation-created hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
11:53:27 [32mINFO[0m cli: juju status --model testing --format json
11:53:27 [32mINFO[0m cli: juju remove-relation --model testing spring-boot-k8s rabbitmq-k8s