10:37:57 [32mINFO[0m cli: juju deploy --model testing postgresql-k8s --base ubuntu@22.04 --channel 14/edge --config profile=testing --config plugin_hstore_enable=true --config plugin_pg_trgm_enable=true --trust
10:37:59 [32mINFO[0m cli: juju deploy --model testing /home/runner/work/paas-charm/paas-charm/spring-boot-k8s_amd64.charm spring-boot-k8s --resource app-image=ghcr.io/canonical/paas-spring-boot-app:c0b1a2b123e28186347616ed0a6ab9d3b870361c-_0.1_amd64
10:38:03 [32mINFO[0m cli: juju integrate --model testing spring-boot-k8s postgresql-k8s:database
10:38:04 [32mINFO[0m wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-67728-microk8s'
+ .model.cloud = 'microk8s'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .apps['flask-k8s'].charm = 'local:flask-k8s-0'
+ .apps['flask-k8s'].charm_origin = 'local'
+ .apps['flask-k8s'].charm_name = 'flask-k8s'
+ .apps['flask-k8s'].charm_rev = 0
+ .apps['flask-k8s'].exposed = False
+ .apps['flask-k8s'].base.name = 'ubuntu'
+ .apps['flask-k8s'].base.channel = '22.04'
+ .apps['flask-k8s'].scale = 1
+ .apps['flask-k8s'].provider_id = '2097e1e9-662c-499c-ba05-8764a143e574'
+ .apps['flask-k8s'].address = '10.152.183.108'
+ .apps['flask-k8s'].app_status.current = 'active'
+ .apps['flask-k8s'].relations['s3'][0].related_app = 's3-integrator'
+ .apps['flask-k8s'].relations['s3'][0].interface = 's3'
+ .apps['flask-k8s'].relations['s3'][0].scope = 'global'
+ .apps['flask-k8s'].relations['secret-storage'][0].related_app = 'flask-k8s'
+ .apps['flask-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['flask-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'active'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'idle'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.version = '3.6.11'
+ .apps['flask-k8s'].units['flask-k8s/0'].leader = True
+ .apps['flask-k8s'].units['flask-k8s/0'].address = '10.1.110.142'
+ .apps['flask-k8s'].units['flask-k8s/0'].provider_id = 'flask-k8s-0'
+ .apps['flask-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['minio'].charm = 'minio'
+ .apps['minio'].charm_origin = 'charmhub'
+ .apps['minio'].charm_name = 'minio'
+ .apps['minio'].charm_rev = 583
+ .apps['minio'].exposed = False
+ .apps['minio'].base.name = 'ubuntu'
+ .apps['minio'].base.channel = '20.04'
+ .apps['minio'].charm_channel = 'ckf-1.10/edge'
+ .apps['minio'].scale = 1
+ .apps['minio'].provider_id = '02d7956e-44b4-4bc5-a881-ef1b8ec7c2c7'
+ .apps['minio'].address = '10.152.183.125'
+ .apps['minio'].app_status.current = 'active'
+ .apps['minio'].units['minio/0'].workload_status.current = 'active'
+ .apps['minio'].units['minio/0'].juju_status.current = 'idle'
+ .apps['minio'].units['minio/0'].leader = True
+ .apps['minio'].units['minio/0'].open_ports[0] = '9000/TCP'
+ .apps['minio'].units['minio/0'].open_ports[1] = '9001/TCP'
+ .apps['minio'].units['minio/0'].address = '10.1.110.140'
+ .apps['minio'].units['minio/0'].provider_id = 'minio-0'
+ .apps['minio'].version = 'registry.jujucharms.com/charm/81j63o4a2ldarn1umc22iyjz1q9l9g0sx5b8j/oci-image@sha256:7f2474f60a02f11dc3294542a97092bd2392b91d526c7e7c70648c0b9d3b68ab'
+ .apps['minio'].endpoint_bindings[''] = 'alpha'
+ .apps['minio'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['minio'].endpoint_bindings['object-storage'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 684
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/edge'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].provider_id = '22e3da1b-5810-48e7-bf56-0734fdc2c62c'
+ .apps['postgresql-k8s'].address = '10.152.183.244'
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'spring-boot-k8s'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing agent'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'allocating'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['s3-integrator'].charm = 's3-integrator'
+ .apps['s3-integrator'].charm_origin = 'charmhub'
+ .apps['s3-integrator'].charm_name = 's3-integrator'
+ .apps['s3-integrator'].charm_rev = 241
+ .apps['s3-integrator'].exposed = False
+ .apps['s3-integrator'].base.name = 'ubuntu'
+ .apps['s3-integrator'].base.channel = '22.04'
+ .apps['s3-integrator'].charm_channel = '1/edge'
+ .apps['s3-integrator'].scale = 1
+ .apps['s3-integrator'].provider_id = '9115cba8-00a9-400f-8784-ffe092632858'
+ .apps['s3-integrator'].address = '10.152.183.140'
+ .apps['s3-integrator'].app_status.current = 'active'
+ .apps['s3-integrator'].relations['s3-credentials'][0].related_app = 'flask-k8s'
+ .apps['s3-integrator'].relations['s3-credentials'][0].interface = 's3'
+ .apps['s3-integrator'].relations['s3-credentials'][0].scope = 'global'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].related_app = 's3-integrator'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].interface = 's3-integrator-peers'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].scope = 'global'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'active'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'idle'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.version = '3.6.11'
+ .apps['s3-integrator'].units['s3-integrator/0'].leader = True
+ .apps['s3-integrator'].units['s3-integrator/0'].address = '10.1.110.141'
+ .apps['s3-integrator'].units['s3-integrator/0'].provider_id = 's3-integrator-0'
+ .apps['s3-integrator'].endpoint_bindings[''] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-credentials'] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-integrator-peers'] = 'alpha'
+ .apps['spring-boot-k8s'].charm = 'local:spring-boot-k8s-0'
+ .apps['spring-boot-k8s'].charm_origin = 'local'
+ .apps['spring-boot-k8s'].charm_name = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].charm_rev = 0
+ .apps['spring-boot-k8s'].exposed = False
+ .apps['spring-boot-k8s'].base.name = 'ubuntu'
+ .apps['spring-boot-k8s'].base.channel = '24.04'
+ .apps['spring-boot-k8s'].scale = 1
+ .apps['spring-boot-k8s'].app_status.current = 'waiting'
+ .apps['spring-boot-k8s'].app_status.message = 'installing agent'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].related_app = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'waiting'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'installing agent'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'allocating'
+ .apps['spring-boot-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .storage.storage['minio-data/0'].kind = 'filesystem'
+ .storage.storage['minio-data/0'].status.current = 'attached'
+ .storage.storage['minio-data/0'].status.message = 'Successfully provisioned volume pvc-432222ed-1e5a-4b68-9472-736301ba070a'
+ .storage.storage['minio-data/0'].persistent = False
+ .storage.storage['minio-data/0'].life = 'alive'
+ .storage.storage['minio-data/0'].attachments.units['minio/0'].life = 'alive'
+ .storage.storage['pgdata/1'].kind = 'filesystem'
+ .storage.storage['pgdata/1'].status.current = 'pending'
+ .storage.storage['pgdata/1'].persistent = False
+ .storage.storage['pgdata/1'].life = 'alive'
+ .storage.storage['pgdata/1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 31
+ .storage.filesystems['0'].provider_id = '432222ed-1e5a-4b68-9472-736301ba070a'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'minio-data/0'
+ .storage.filesystems['0'].attachments.containers['minio/0'].mount_point = '/data'
+ .storage.filesystems['0'].attachments.containers['minio/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['minio/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['minio/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-432222ed-1e5a-4b68-9472-736301ba070a'
+ .storage.filesystems['1'].size = 0
+ .storage.filesystems['1'].volume = '1'
+ .storage.filesystems['1'].storage = 'pgdata/1'
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].mount_point = ''
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['1'].life = 'alive'
+ .storage.filesystems['1'].status.current = 'pending'
+ .storage.volumes['0'].size = 1261
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-432222ed-1e5a-4b68-9472-736301ba070a'
+ .storage.volumes['0'].storage = 'minio-data/0'
+ .storage.volumes['0'].attachments.containers['minio/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['minio/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['minio/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
+ .storage.volumes['1'].size = 0
+ .storage.volumes['1'].persistent = False
+ .storage.volumes['1'].storage = 'pgdata/1'
+ .storage.volumes['1'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['1'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['1'].life = 'alive'
+ .storage.volumes['1'].status.current = 'pending'
10:38:15 [32mINFO[0m wait: status changed:
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['spring-boot-k8s'].provider_id = '22491770-286f-4bf1-8a01-f5a444683022'
+ .apps['spring-boot-k8s'].address = '10.152.183.141'
10:38:16 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].app_status.message = 'agent initialising'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing agent'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'agent initialising'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
10:38:17 [32mINFO[0m wait: status changed:
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.110.144'
- .storage.storage['pgdata/1'].status.current = 'pending'
+ .storage.storage['pgdata/1'].status.current = 'attached'
+ .storage.storage['pgdata/1'].status.message = 'Successfully provisioned volume pvc-99eb09c9-ecc1-4a8c-89f8-b9f2d18fa7a2'
- .storage.filesystems['1'].size = 0
+ .storage.filesystems['1'].size = 1024
+ .storage.filesystems['1'].provider_id = '99eb09c9-ecc1-4a8c-89f8-b9f2d18fa7a2'
- .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].mount_point = ''
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['1'].pool = 'kubernetes'
- .storage.filesystems['1'].status.current = 'pending'
+ .storage.filesystems['1'].status.current = 'attached'
+ .storage.filesystems['1'].status.message = 'Successfully provisioned volume pvc-99eb09c9-ecc1-4a8c-89f8-b9f2d18fa7a2'
- .storage.volumes['1'].size = 0
- .storage.volumes['1'].persistent = False
+ .storage.volumes['1'].size = 1024
+ .storage.volumes['1'].persistent = True
+ .storage.volumes['1'].provider_id = 'pvc-99eb09c9-ecc1-4a8c-89f8-b9f2d18fa7a2'
+ .storage.volumes['1'].pool = 'kubernetes'
- .storage.volumes['1'].status.current = 'pending'
+ .storage.volumes['1'].status.current = 'attached'
10:38:21 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'waiting'
- .apps['postgresql-k8s'].app_status.message = 'agent initialising'
+ .apps['postgresql-k8s'].app_status.current = 'maintenance'
+ .apps['postgresql-k8s'].app_status.message = 'installing charm software'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'agent initialising'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'allocating'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'maintenance'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running install hook'
10:38:22 [32mINFO[0m wait: status changed:
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].provider_id = 'spring-boot-k8s-0'
10:38:24 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running install hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-created hook'
- .apps['spring-boot-k8s'].app_status.message = 'installing agent'
+ .apps['spring-boot-k8s'].app_status.message = 'agent initialising'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'installing agent'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'agent initialising'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.version = '3.6.11'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].leader = True
10:38:25 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-created hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].address = '10.1.110.145'
10:38:26 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running restart-relation-created hook'
- .apps['spring-boot-k8s'].app_status.current = 'waiting'
- .apps['spring-boot-k8s'].app_status.message = 'agent initialising'
+ .apps['spring-boot-k8s'].app_status.current = 'maintenance'
+ .apps['spring-boot-k8s'].app_status.message = 'installing charm software'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'waiting'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'agent initialising'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'allocating'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'maintenance'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running install hook'
10:38:29 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running restart-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-created hook'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running install hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-created hook'
10:38:30 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running leader-elected hook'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-created hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running leader-elected hook'
10:38:32 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running leader-elected hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running pgdata-storage-attached hook'
- .apps['spring-boot-k8s'].app_status.message = 'installing charm software'
+ .apps['spring-boot-k8s'].app_status.message = 'Preparing service for restart'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running leader-elected hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running app-pebble-ready hook'
10:38:33 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].app_status.current = 'maintenance'
- .apps['spring-boot-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['spring-boot-k8s'].app_status.current = 'active'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'maintenance'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running app-pebble-ready hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'active'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
10:38:35 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running pgdata-storage-attached hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running config-changed hook'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running start hook'
10:38:36 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running config-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running start hook'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running start hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-joined hook for postgresql-k8s/0'
10:38:38 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-joined hook for postgresql-k8s/0'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook for postgresql-k8s/0'
10:38:40 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'maintenance'
- .apps['postgresql-k8s'].app_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'installing agent'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'maintenance'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'unknown'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running start hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook for postgresql-k8s/0'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running secret-storage-relation-changed hook'
10:38:41 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running secret-storage-relation-changed hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
10:38:43 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-joined hook for spring-boot-k8s/0'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
10:38:44 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-joined hook for spring-boot-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for spring-boot-k8s/0'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
10:38:48 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for spring-boot-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-changed hook'
10:38:53 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
10:38:55 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'waiting'
- .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].app_status.current = 'unknown'
10:38:56 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'unknown'
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'installing agent'
10:39:01 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running postgresql-pebble-ready hook'
10:39:02 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running postgresql-pebble-ready hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].version = '14.19'
10:39:05 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].app_status.message = 'awaiting for cluster to start'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'unknown'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for cluster to start'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
10:39:06 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
10:39:23 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'waiting'
- .apps['postgresql-k8s'].app_status.message = 'awaiting for cluster to start'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].app_status.message = 'Primary'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for cluster to start'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
10:39:24 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.message = 'Primary'
10:39:25 [32mINFO[0m cli: juju integrate --model testing spring-boot-k8s:s3 s3-integrator:s3-credentials
10:39:26 [32mINFO[0m wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-67728-microk8s'
+ .model.cloud = 'microk8s'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .apps['flask-k8s'].charm = 'local:flask-k8s-0'
+ .apps['flask-k8s'].charm_origin = 'local'
+ .apps['flask-k8s'].charm_name = 'flask-k8s'
+ .apps['flask-k8s'].charm_rev = 0
+ .apps['flask-k8s'].exposed = False
+ .apps['flask-k8s'].base.name = 'ubuntu'
+ .apps['flask-k8s'].base.channel = '22.04'
+ .apps['flask-k8s'].scale = 1
+ .apps['flask-k8s'].provider_id = '2097e1e9-662c-499c-ba05-8764a143e574'
+ .apps['flask-k8s'].address = '10.152.183.108'
+ .apps['flask-k8s'].app_status.current = 'active'
+ .apps['flask-k8s'].relations['s3'][0].related_app = 's3-integrator'
+ .apps['flask-k8s'].relations['s3'][0].interface = 's3'
+ .apps['flask-k8s'].relations['s3'][0].scope = 'global'
+ .apps['flask-k8s'].relations['secret-storage'][0].related_app = 'flask-k8s'
+ .apps['flask-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['flask-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'active'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'idle'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.version = '3.6.11'
+ .apps['flask-k8s'].units['flask-k8s/0'].leader = True
+ .apps['flask-k8s'].units['flask-k8s/0'].address = '10.1.110.142'
+ .apps['flask-k8s'].units['flask-k8s/0'].provider_id = 'flask-k8s-0'
+ .apps['flask-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['minio'].charm = 'minio'
+ .apps['minio'].charm_origin = 'charmhub'
+ .apps['minio'].charm_name = 'minio'
+ .apps['minio'].charm_rev = 583
+ .apps['minio'].exposed = False
+ .apps['minio'].base.name = 'ubuntu'
+ .apps['minio'].base.channel = '20.04'
+ .apps['minio'].charm_channel = 'ckf-1.10/edge'
+ .apps['minio'].scale = 1
+ .apps['minio'].provider_id = '02d7956e-44b4-4bc5-a881-ef1b8ec7c2c7'
+ .apps['minio'].address = '10.152.183.125'
+ .apps['minio'].app_status.current = 'active'
+ .apps['minio'].units['minio/0'].workload_status.current = 'active'
+ .apps['minio'].units['minio/0'].juju_status.current = 'idle'
+ .apps['minio'].units['minio/0'].leader = True
+ .apps['minio'].units['minio/0'].open_ports[0] = '9000/TCP'
+ .apps['minio'].units['minio/0'].open_ports[1] = '9001/TCP'
+ .apps['minio'].units['minio/0'].address = '10.1.110.140'
+ .apps['minio'].units['minio/0'].provider_id = 'minio-0'
+ .apps['minio'].version = 'registry.jujucharms.com/charm/81j63o4a2ldarn1umc22iyjz1q9l9g0sx5b8j/oci-image@sha256:7f2474f60a02f11dc3294542a97092bd2392b91d526c7e7c70648c0b9d3b68ab'
+ .apps['minio'].endpoint_bindings[''] = 'alpha'
+ .apps['minio'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['minio'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['minio'].endpoint_bindings['object-storage'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 684
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/edge'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].provider_id = '22e3da1b-5810-48e7-bf56-0734fdc2c62c'
+ .apps['postgresql-k8s'].address = '10.152.183.244'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'spring-boot-k8s'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.110.144'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['postgresql-k8s'].version = '14.19'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['s3-integrator'].charm = 's3-integrator'
+ .apps['s3-integrator'].charm_origin = 'charmhub'
+ .apps['s3-integrator'].charm_name = 's3-integrator'
+ .apps['s3-integrator'].charm_rev = 241
+ .apps['s3-integrator'].exposed = False
+ .apps['s3-integrator'].base.name = 'ubuntu'
+ .apps['s3-integrator'].base.channel = '22.04'
+ .apps['s3-integrator'].charm_channel = '1/edge'
+ .apps['s3-integrator'].scale = 1
+ .apps['s3-integrator'].provider_id = '9115cba8-00a9-400f-8784-ffe092632858'
+ .apps['s3-integrator'].address = '10.152.183.140'
+ .apps['s3-integrator'].app_status.current = 'active'
+ .apps['s3-integrator'].relations['s3-credentials'][0].related_app = 'flask-k8s'
+ .apps['s3-integrator'].relations['s3-credentials'][0].interface = 's3'
+ .apps['s3-integrator'].relations['s3-credentials'][0].scope = 'global'
+ .apps['s3-integrator'].relations['s3-credentials'][1].related_app = 'spring-boot-k8s'
+ .apps['s3-integrator'].relations['s3-credentials'][1].interface = 's3'
+ .apps['s3-integrator'].relations['s3-credentials'][1].scope = 'global'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].related_app = 's3-integrator'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].interface = 's3-integrator-peers'
+ .apps['s3-integrator'].relations['s3-integrator-peers'][0].scope = 'global'
+ .apps['s3-integrator'].units['s3-integrator/0'].workload_status.current = 'active'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'executing'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running s3-credentials-relation-created hook'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.version = '3.6.11'
+ .apps['s3-integrator'].units['s3-integrator/0'].leader = True
+ .apps['s3-integrator'].units['s3-integrator/0'].address = '10.1.110.141'
+ .apps['s3-integrator'].units['s3-integrator/0'].provider_id = 's3-integrator-0'
+ .apps['s3-integrator'].endpoint_bindings[''] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-credentials'] = 'alpha'
+ .apps['s3-integrator'].endpoint_bindings['s3-integrator-peers'] = 'alpha'
+ .apps['spring-boot-k8s'].charm = 'local:spring-boot-k8s-0'
+ .apps['spring-boot-k8s'].charm_origin = 'local'
+ .apps['spring-boot-k8s'].charm_name = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].charm_rev = 0
+ .apps['spring-boot-k8s'].exposed = False
+ .apps['spring-boot-k8s'].base.name = 'ubuntu'
+ .apps['spring-boot-k8s'].base.channel = '24.04'
+ .apps['spring-boot-k8s'].scale = 1
+ .apps['spring-boot-k8s'].provider_id = '22491770-286f-4bf1-8a01-f5a444683022'
+ .apps['spring-boot-k8s'].address = '10.152.183.141'
+ .apps['spring-boot-k8s'].app_status.current = 'active'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['spring-boot-k8s'].relations['s3'][0].related_app = 's3-integrator'
+ .apps['spring-boot-k8s'].relations['s3'][0].interface = 's3'
+ .apps['spring-boot-k8s'].relations['s3'][0].scope = 'global'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].related_app = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'active'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running s3-relation-created hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.version = '3.6.11'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].leader = True
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].address = '10.1.110.145'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].provider_id = 'spring-boot-k8s-0'
+ .apps['spring-boot-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .storage.storage['minio-data/0'].kind = 'filesystem'
+ .storage.storage['minio-data/0'].status.current = 'attached'
+ .storage.storage['minio-data/0'].status.message = 'Successfully provisioned volume pvc-432222ed-1e5a-4b68-9472-736301ba070a'
+ .storage.storage['minio-data/0'].persistent = False
+ .storage.storage['minio-data/0'].life = 'alive'
+ .storage.storage['minio-data/0'].attachments.units['minio/0'].life = 'alive'
+ .storage.storage['pgdata/1'].kind = 'filesystem'
+ .storage.storage['pgdata/1'].status.current = 'attached'
+ .storage.storage['pgdata/1'].status.message = 'Successfully provisioned volume pvc-99eb09c9-ecc1-4a8c-89f8-b9f2d18fa7a2'
+ .storage.storage['pgdata/1'].persistent = False
+ .storage.storage['pgdata/1'].life = 'alive'
+ .storage.storage['pgdata/1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 31
+ .storage.filesystems['0'].provider_id = '432222ed-1e5a-4b68-9472-736301ba070a'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'minio-data/0'
+ .storage.filesystems['0'].attachments.containers['minio/0'].mount_point = '/data'
+ .storage.filesystems['0'].attachments.containers['minio/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['minio/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['minio/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-432222ed-1e5a-4b68-9472-736301ba070a'
+ .storage.filesystems['1'].size = 1024
+ .storage.filesystems['1'].provider_id = '99eb09c9-ecc1-4a8c-89f8-b9f2d18fa7a2'
+ .storage.filesystems['1'].volume = '1'
+ .storage.filesystems['1'].storage = 'pgdata/1'
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['1'].pool = 'kubernetes'
+ .storage.filesystems['1'].life = 'alive'
+ .storage.filesystems['1'].status.current = 'attached'
+ .storage.filesystems['1'].status.message = 'Successfully provisioned volume pvc-99eb09c9-ecc1-4a8c-89f8-b9f2d18fa7a2'
+ .storage.volumes['0'].size = 1261
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-432222ed-1e5a-4b68-9472-736301ba070a'
+ .storage.volumes['0'].storage = 'minio-data/0'
+ .storage.volumes['0'].attachments.containers['minio/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['minio/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['minio/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
+ .storage.volumes['1'].size = 1024
+ .storage.volumes['1'].persistent = True
+ .storage.volumes['1'].provider_id = 'pvc-99eb09c9-ecc1-4a8c-89f8-b9f2d18fa7a2'
+ .storage.volumes['1'].storage = 'pgdata/1'
+ .storage.volumes['1'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['1'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['1'].pool = 'kubernetes'
+ .storage.volumes['1'].life = 'alive'
+ .storage.volumes['1'].status.current = 'attached'
10:39:29 [32mINFO[0m wait: status changed:
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'executing'
- .apps['s3-integrator'].units['s3-integrator/0'].juju_status.message = 'running s3-credentials-relation-created hook'
+ .apps['s3-integrator'].units['s3-integrator/0'].juju_status.current = 'idle'
- .apps['spring-boot-k8s'].app_status.current = 'active'
+ .apps['spring-boot-k8s'].app_status.current = 'maintenance'
+ .apps['spring-boot-k8s'].app_status.message = 'Preparing service for restart'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'active'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'maintenance'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running s3-relation-created hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running s3-relation-changed hook'
10:39:33 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-changed hook'
- .apps['spring-boot-k8s'].app_status.current = 'maintenance'
- .apps['spring-boot-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['spring-boot-k8s'].app_status.current = 'active'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'maintenance'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'active'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running s3-relation-changed hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
10:39:36 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for spring-boot-k8s/0'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
10:39:40 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for spring-boot-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
10:39:40 [32mINFO[0m cli: juju status --model testing --format json
10:39:40 [33mWARNING[0m Retrying (Retry(total=4, connect=4, read=5, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8e454d6710>: Failed to establish a new connection: [Errno 111] Connection refused')': /env
10:39:50 [33mWARNING[0m Retrying (Retry(total=3, connect=3, read=5, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8e454d6ef0>: Failed to establish a new connection: [Errno 111] Connection refused')': /env