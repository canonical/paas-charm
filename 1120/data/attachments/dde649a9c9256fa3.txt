10:41:15 [32mINFO[0m cli: juju status --model testing --format json
10:41:15 [32mINFO[0m cli: juju bootstrap lxd localhost
10:43:09 [32mINFO[0m cli: juju switch github-pr-67728-microk8s:testing
10:43:09 [32mINFO[0m cli: juju status --model testing --format json
10:43:09 [32mINFO[0m cli: juju status --model testing --format json
10:43:09 [32mINFO[0m cli: juju switch localhost:
10:43:09 [32mINFO[0m cli: juju add-model --no-switch testing
10:43:10 [32mINFO[0m cli: juju switch github-pr-67728-microk8s:testing
10:43:10 [32mINFO[0m cli: juju status --model testing --format json
10:43:10 [32mINFO[0m cli: juju switch localhost:testing
10:43:10 [32mINFO[0m cli: juju status --model testing --format json
10:43:11 [32mINFO[0m cli: juju deploy --model testing rabbitmq-server --channel edge
10:43:14 [32mINFO[0m cli: juju offer rabbitmq-server:amqp
10:43:14 [32mINFO[0m wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'iaas'
+ .model.controller = 'localhost'
+ .model.cloud = 'localhost'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .machines['0'].juju_status.current = 'pending'
+ .machines['0'].instance_id = 'pending'
+ .machines['0'].machine_status.current = 'pending'
+ .machines['0'].modification_status.current = 'idle'
+ .machines['0'].base.name = 'ubuntu'
+ .machines['0'].base.channel = '24.04'
+ .machines['0'].constraints = 'arch=amd64'
+ .apps['rabbitmq-server'].charm = 'rabbitmq-server'
+ .apps['rabbitmq-server'].charm_origin = 'charmhub'
+ .apps['rabbitmq-server'].charm_name = 'rabbitmq-server'
+ .apps['rabbitmq-server'].charm_rev = 190
+ .apps['rabbitmq-server'].exposed = False
+ .apps['rabbitmq-server'].base.name = 'ubuntu'
+ .apps['rabbitmq-server'].base.channel = '24.04'
+ .apps['rabbitmq-server'].charm_channel = '3.9/edge'
+ .apps['rabbitmq-server'].app_status.current = 'waiting'
+ .apps['rabbitmq-server'].app_status.message = 'waiting for machine'
+ .apps['rabbitmq-server'].relations['cluster'][0].related_app = 'rabbitmq-server'
+ .apps['rabbitmq-server'].relations['cluster'][0].interface = 'rabbitmq-ha'
+ .apps['rabbitmq-server'].relations['cluster'][0].scope = 'global'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.current = 'waiting'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.message = 'waiting for machine'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].juju_status.current = 'allocating'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].machine = '0'
+ .apps['rabbitmq-server'].endpoint_bindings[''] = 'alpha'
+ .apps['rabbitmq-server'].endpoint_bindings['amqp'] = 'alpha'
+ .apps['rabbitmq-server'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['rabbitmq-server'].endpoint_bindings['cluster'] = 'alpha'
+ .apps['rabbitmq-server'].endpoint_bindings['dashboards'] = 'alpha'
+ .apps['rabbitmq-server'].endpoint_bindings['ha'] = 'alpha'
+ .apps['rabbitmq-server'].endpoint_bindings['nrpe-external-master'] = 'alpha'
+ .apps['rabbitmq-server'].endpoint_bindings['prometheus-rules'] = 'alpha'
+ .apps['rabbitmq-server'].endpoint_bindings['scrape'] = 'alpha'
+ .offers['rabbitmq-server'].app = 'rabbitmq-server'
+ .offers['rabbitmq-server'].endpoints['amqp'].interface = 'rabbitmq'
+ .offers['rabbitmq-server'].endpoints['amqp'].role = 'provider'
+ .offers['rabbitmq-server'].charm = 'ch:amd64/rabbitmq-server-190'
10:43:24 [32mINFO[0m wait: status changed:
- .machines['0'].instance_id = 'pending'
- .machines['0'].machine_status.current = 'pending'
- .machines['0'].modification_status.current = 'idle'
+ .machines['0'].instance_id = 'juju-8f32fb-0'
+ .machines['0'].machine_status.current = 'running'
+ .machines['0'].machine_status.message = 'Container started'
+ .machines['0'].modification_status.current = 'applied'
+ .machines['0'].hardware = 'arch=amd64 cores=0 mem=0M availability-zone=runnervmnfq8z virt-type=container'
10:43:45 [32mINFO[0m wait: status changed:
+ .machines['0'].dns_name = '10.10.220.235'
+ .machines['0'].ip_addresses[0] = '10.10.220.235'
- .machines['0'].machine_status.message = 'Container started'
+ .machines['0'].machine_status.message = 'Running'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].public_address = '10.10.220.235'
10:44:05 [32mINFO[0m wait: status changed:
- .machines['0'].juju_status.current = 'pending'
+ .machines['0'].juju_status.current = 'started'
+ .machines['0'].juju_status.version = '3.6.11'
+ .machines['0'].hostname = 'juju-8f32fb-0'
+ .machines['0'].network_interfaces['eth0'].ip_addresses[0] = '10.10.220.235'
+ .machines['0'].network_interfaces['eth0'].mac_address = '00:16:3e:79:e0:8c'
+ .machines['0'].network_interfaces['eth0'].is_up = True
+ .machines['0'].network_interfaces['eth0'].gateway = '10.10.220.1'
+ .machines['0'].network_interfaces['eth0'].space = 'alpha'
- .apps['rabbitmq-server'].app_status.current = 'waiting'
- .apps['rabbitmq-server'].app_status.message = 'waiting for machine'
+ .apps['rabbitmq-server'].app_status.current = 'maintenance'
+ .apps['rabbitmq-server'].app_status.message = 'installing charm software'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.current = 'waiting'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.message = 'waiting for machine'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].juju_status.current = 'allocating'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.current = 'maintenance'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.message = 'installing charm software'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].juju_status.current = 'executing'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].juju_status.message = 'running install hook'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].juju_status.version = '3.6.11'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].leader = True
10:44:36 [32mINFO[0m wait: status changed:
- .apps['rabbitmq-server'].app_status.message = 'installing charm software'
+ .apps['rabbitmq-server'].app_status.message = 'Installing/upgrading RabbitMQ packages'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.message = 'installing charm software'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.message = 'Installing/upgrading RabbitMQ packages'
10:44:46 [32mINFO[0m wait: status changed:
- .apps['rabbitmq-server'].app_status.message = 'Installing/upgrading RabbitMQ packages'
+ .apps['rabbitmq-server'].app_status.message = 'rabbitmq-server/0 is the elected leader'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.message = 'Installing/upgrading RabbitMQ packages'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.message = 'rabbitmq-server/0 is the elected leader'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].juju_status.message = 'running install hook'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].juju_status.message = 'running leader-elected hook'
+ .apps['rabbitmq-server'].version = '3.12.1'
10:44:57 [32mINFO[0m wait: status changed:
- .apps['rabbitmq-server'].app_status.current = 'maintenance'
- .apps['rabbitmq-server'].app_status.message = 'rabbitmq-server/0 is the elected leader'
+ .apps['rabbitmq-server'].app_status.current = 'active'
+ .apps['rabbitmq-server'].app_status.message = 'Checking queue mirroring is enabled'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.current = 'maintenance'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.message = 'rabbitmq-server/0 is the elected leader'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.current = 'active'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.message = 'Checking queue mirroring is enabled'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].juju_status.message = 'running leader-elected hook'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].juju_status.message = 'running config-changed hook'
10:45:07 [32mINFO[0m wait: status changed:
- .apps['rabbitmq-server'].app_status.current = 'active'
- .apps['rabbitmq-server'].app_status.message = 'Checking queue mirroring is enabled'
+ .apps['rabbitmq-server'].app_status.current = 'maintenance'
+ .apps['rabbitmq-server'].app_status.message = 'Restarting rabbitmq-server'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.current = 'active'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.message = 'Checking queue mirroring is enabled'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.current = 'maintenance'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.message = 'Restarting rabbitmq-server'
10:45:48 [32mINFO[0m wait: status changed:
- .apps['rabbitmq-server'].app_status.current = 'maintenance'
- .apps['rabbitmq-server'].app_status.message = 'Restarting rabbitmq-server'
+ .apps['rabbitmq-server'].app_status.current = 'active'
+ .apps['rabbitmq-server'].app_status.message = 'Unit is ready'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.current = 'maintenance'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.message = 'Restarting rabbitmq-server'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].juju_status.current = 'executing'
- .apps['rabbitmq-server'].units['rabbitmq-server/0'].juju_status.message = 'running config-changed hook'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.current = 'active'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].workload_status.message = 'Unit is ready'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].juju_status.current = 'idle'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].open_ports[0] = '5672/tcp'
+ .apps['rabbitmq-server'].units['rabbitmq-server/0'].open_ports[1] = '15672/tcp'
10:46:08 [32mINFO[0m cli: juju switch github-pr-67728-microk8s:testing
10:46:08 [32mINFO[0m cli: juju consume localhost:admin/testing.rabbitmq-server
10:46:08 [32mINFO[0m cli: juju integrate --model testing flask-k8s rabbitmq-server
10:46:09 [32mINFO[0m wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-67728-microk8s'
+ .model.cloud = 'microk8s'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .apps['flask-k8s'].charm = 'local:flask-k8s-0'
+ .apps['flask-k8s'].charm_origin = 'local'
+ .apps['flask-k8s'].charm_name = 'flask-k8s'
+ .apps['flask-k8s'].charm_rev = 0
+ .apps['flask-k8s'].exposed = False
+ .apps['flask-k8s'].base.name = 'ubuntu'
+ .apps['flask-k8s'].base.channel = '22.04'
+ .apps['flask-k8s'].scale = 1
+ .apps['flask-k8s'].provider_id = '7dff4acd-10f1-434f-9d08-ae6e9aeb319c'
+ .apps['flask-k8s'].address = '10.152.183.223'
+ .apps['flask-k8s'].app_status.current = 'active'
+ .apps['flask-k8s'].relations['rabbitmq'][0].related_app = 'rabbitmq-server'
+ .apps['flask-k8s'].relations['rabbitmq'][0].interface = 'rabbitmq'
+ .apps['flask-k8s'].relations['secret-storage'][0].related_app = 'flask-k8s'
+ .apps['flask-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['flask-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'active'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'executing'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running rabbitmq-relation-created hook'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.version = '3.6.11'
+ .apps['flask-k8s'].units['flask-k8s/0'].leader = True
+ .apps['flask-k8s'].units['flask-k8s/0'].address = '10.1.110.138'
+ .apps['flask-k8s'].units['flask-k8s/0'].provider_id = 'flask-k8s-0'
+ .apps['flask-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 684
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/edge'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].provider_id = 'e5c2572b-bbf3-4f3e-bf8a-ed678fad80e6'
+ .apps['postgresql-k8s'].address = '10.152.183.247'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'spring-boot-k8s'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.110.142'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['postgresql-k8s'].version = '14.19'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['rabbitmq-k8s'].charm = 'rabbitmq-k8s'
+ .apps['rabbitmq-k8s'].charm_origin = 'charmhub'
+ .apps['rabbitmq-k8s'].charm_name = 'rabbitmq-k8s'
+ .apps['rabbitmq-k8s'].charm_rev = 54
+ .apps['rabbitmq-k8s'].exposed = False
+ .apps['rabbitmq-k8s'].base.name = 'ubuntu'
+ .apps['rabbitmq-k8s'].base.channel = '24.04'
+ .apps['rabbitmq-k8s'].charm_channel = '3.12/edge'
+ .apps['rabbitmq-k8s'].scale = 1
+ .apps['rabbitmq-k8s'].provider_id = '020533d1-336f-435e-9d1e-3370734269b5'
+ .apps['rabbitmq-k8s'].address = '10.152.183.63'
+ .apps['rabbitmq-k8s'].app_status.current = 'active'
+ .apps['rabbitmq-k8s'].relations['peers'][0].related_app = 'rabbitmq-k8s'
+ .apps['rabbitmq-k8s'].relations['peers'][0].interface = 'rabbitmq-peer'
+ .apps['rabbitmq-k8s'].relations['peers'][0].scope = 'global'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].workload_status.current = 'active'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].juju_status.current = 'idle'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].juju_status.version = '3.6.11'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].leader = True
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].address = '10.1.110.140'
+ .apps['rabbitmq-k8s'].units['rabbitmq-k8s/0'].provider_id = 'rabbitmq-k8s-0'
+ .apps['rabbitmq-k8s'].version = '3.12.1'
+ .apps['rabbitmq-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['rabbitmq-k8s'].endpoint_bindings['amqp'] = 'alpha'
+ .apps['rabbitmq-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['rabbitmq-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['rabbitmq-k8s'].endpoint_bindings['peers'] = 'alpha'
+ .apps['spring-boot-k8s'].charm = 'local:spring-boot-k8s-0'
+ .apps['spring-boot-k8s'].charm_origin = 'local'
+ .apps['spring-boot-k8s'].charm_name = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].charm_rev = 0
+ .apps['spring-boot-k8s'].exposed = False
+ .apps['spring-boot-k8s'].base.name = 'ubuntu'
+ .apps['spring-boot-k8s'].base.channel = '24.04'
+ .apps['spring-boot-k8s'].scale = 1
+ .apps['spring-boot-k8s'].provider_id = '03462fcf-b0f1-4b89-a531-e574f473f2bf'
+ .apps['spring-boot-k8s'].address = '10.152.183.40'
+ .apps['spring-boot-k8s'].app_status.current = 'active'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].related_app = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'active'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.version = '3.6.11'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].leader = True
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].address = '10.1.110.143'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].provider_id = 'spring-boot-k8s-0'
+ .apps['spring-boot-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .app_endpoints['rabbitmq-server'].url = 'localhost:admin/testing.rabbitmq-server'
+ .app_endpoints['rabbitmq-server'].endpoints['amqp'].interface = 'rabbitmq'
+ .app_endpoints['rabbitmq-server'].endpoints['amqp'].role = 'provider'
+ .app_endpoints['rabbitmq-server'].app_status.current = 'active'
+ .app_endpoints['rabbitmq-server'].app_status.message = 'Unit is ready'
+ .app_endpoints['rabbitmq-server'].relations['amqp'][0] = 'flask-k8s'
+ .storage.storage['pgdata/1'].kind = 'filesystem'
+ .storage.storage['pgdata/1'].status.current = 'attached'
+ .storage.storage['pgdata/1'].persistent = False
+ .storage.storage['pgdata/1'].life = 'alive'
+ .storage.storage['pgdata/1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.storage['rabbitmq-data/0'].kind = 'filesystem'
+ .storage.storage['rabbitmq-data/0'].status.current = 'attached'
+ .storage.storage['rabbitmq-data/0'].status.message = 'Successfully provisioned volume pvc-b3ac5d06-6b05-481f-b19c-79372b27ff8d'
+ .storage.storage['rabbitmq-data/0'].persistent = False
+ .storage.storage['rabbitmq-data/0'].life = 'alive'
+ .storage.storage['rabbitmq-data/0'].attachments.units['rabbitmq-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = 'b3ac5d06-6b05-481f-b19c-79372b27ff8d'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'rabbitmq-data/0'
+ .storage.filesystems['0'].attachments.containers['rabbitmq-k8s/0'].mount_point = '/var/lib/juju/storage/rabbitmq-data/0'
+ .storage.filesystems['0'].attachments.containers['rabbitmq-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['rabbitmq-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['rabbitmq-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-b3ac5d06-6b05-481f-b19c-79372b27ff8d'
+ .storage.filesystems['1'].size = 1024
+ .storage.filesystems['1'].provider_id = '9d2856ea-7869-4d44-8860-69500716935f'
+ .storage.filesystems['1'].volume = '1'
+ .storage.filesystems['1'].storage = 'pgdata/1'
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['1'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['1'].pool = 'kubernetes'
+ .storage.filesystems['1'].life = 'alive'
+ .storage.filesystems['1'].status.current = 'attached'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-b3ac5d06-6b05-481f-b19c-79372b27ff8d'
+ .storage.volumes['0'].storage = 'rabbitmq-data/0'
+ .storage.volumes['0'].attachments.containers['rabbitmq-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['rabbitmq-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['rabbitmq-k8s/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
+ .storage.volumes['1'].size = 1024
+ .storage.volumes['1'].persistent = True
+ .storage.volumes['1'].provider_id = 'pvc-9d2856ea-7869-4d44-8860-69500716935f'
+ .storage.volumes['1'].storage = 'pgdata/1'
+ .storage.volumes['1'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['1'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['1'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['1'].pool = 'kubernetes'
+ .storage.volumes['1'].life = 'alive'
+ .storage.volumes['1'].status.current = 'attached'
10:46:39 [32mINFO[0m wait: status changed:
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'executing'
- .apps['flask-k8s'].units['flask-k8s/0'].juju_status.message = 'running rabbitmq-relation-created hook'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'idle'
10:47:10 [32mINFO[0m cli: juju status --model testing --format json
10:47:10 [32mINFO[0m cli: juju remove-relation --model testing flask-k8s rabbitmq-server