10:40:14 [32mINFO[0m cli: juju deploy --model testing postgresql-k8s --base ubuntu@22.04 --channel 14/edge --config profile=testing --config plugin_hstore_enable=true --config plugin_pg_trgm_enable=true --trust
10:40:17 [32mINFO[0m cli: juju deploy --model testing /home/runner/work/paas-charm/paas-charm/spring-boot-k8s_amd64.charm spring-boot-k8s --resource app-image=ghcr.io/canonical/paas-spring-boot-app:c0b1a2b123e28186347616ed0a6ab9d3b870361c-_0.1_amd64
10:40:20 [32mINFO[0m cli: juju integrate --model testing spring-boot-k8s postgresql-k8s:database
10:40:20 [32mINFO[0m wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-67728-microk8s'
+ .model.cloud = 'microk8s'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 684
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/edge'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'spring-boot-k8s'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing agent'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'allocating'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['spring-boot-k8s'].charm = 'local:spring-boot-k8s-0'
+ .apps['spring-boot-k8s'].charm_origin = 'local'
+ .apps['spring-boot-k8s'].charm_name = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].charm_rev = 0
+ .apps['spring-boot-k8s'].exposed = False
+ .apps['spring-boot-k8s'].base.name = 'ubuntu'
+ .apps['spring-boot-k8s'].base.channel = '24.04'
+ .apps['spring-boot-k8s'].scale = 1
+ .apps['spring-boot-k8s'].app_status.current = 'waiting'
+ .apps['spring-boot-k8s'].app_status.message = 'installing agent'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].related_app = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'waiting'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'installing agent'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'allocating'
+ .apps['spring-boot-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'pending'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 0
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'pgdata/0'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = ''
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'pending'
+ .storage.volumes['0'].size = 0
+ .storage.volumes['0'].persistent = False
+ .storage.volumes['0'].storage = 'pgdata/0'
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'pending'
10:40:26 [32mINFO[0m wait: status changed:
+ .apps['spring-boot-k8s'].provider_id = '56f7bfe6-1615-4cf1-93b2-4126f91394c5'
+ .apps['spring-boot-k8s'].address = '10.152.183.132'
10:40:30 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].app_status.message = 'installing agent'
+ .apps['spring-boot-k8s'].app_status.message = 'agent initialising'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'installing agent'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'agent initialising'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.version = '3.6.11'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].leader = True
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].provider_id = 'spring-boot-k8s-0'
10:40:32 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].app_status.current = 'waiting'
- .apps['spring-boot-k8s'].app_status.message = 'agent initialising'
+ .apps['spring-boot-k8s'].app_status.current = 'maintenance'
+ .apps['spring-boot-k8s'].app_status.message = 'installing charm software'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'waiting'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'agent initialising'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'allocating'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'maintenance'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running install hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].address = '10.1.110.138'
10:40:34 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running install hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-created hook'
10:40:35 [32mINFO[0m wait: status changed:
+ .apps['postgresql-k8s'].provider_id = '438e13fc-0c9e-4a53-afc8-493e40bffebb'
+ .apps['postgresql-k8s'].address = '10.152.183.171'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-created hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running config-changed hook'
10:40:36 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].app_status.current = 'maintenance'
- .apps['spring-boot-k8s'].app_status.message = 'installing charm software'
+ .apps['spring-boot-k8s'].app_status.current = 'waiting'
+ .apps['spring-boot-k8s'].app_status.message = 'Waiting for pebble ready'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'maintenance'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'waiting'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'Waiting for pebble ready'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running config-changed hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running start hook'
10:40:38 [32mINFO[0m wait: status changed:
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
- .apps['spring-boot-k8s'].app_status.current = 'waiting'
- .apps['spring-boot-k8s'].app_status.message = 'Waiting for pebble ready'
+ .apps['spring-boot-k8s'].app_status.current = 'maintenance'
+ .apps['spring-boot-k8s'].app_status.message = 'Preparing service for restart'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'waiting'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'Waiting for pebble ready'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'maintenance'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running start hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running app-pebble-ready hook'
10:40:39 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].app_status.current = 'maintenance'
- .apps['spring-boot-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['spring-boot-k8s'].app_status.current = 'waiting'
+ .apps['spring-boot-k8s'].app_status.message = 'installing agent'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'maintenance'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'active'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running app-pebble-ready hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running secret-storage-relation-changed hook'
10:40:40 [32mINFO[0m wait: status changed:
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.110.140'
- .apps['spring-boot-k8s'].app_status.current = 'waiting'
- .apps['spring-boot-k8s'].app_status.message = 'installing agent'
+ .apps['spring-boot-k8s'].app_status.current = 'active'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running secret-storage-relation-changed hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
- .storage.storage['pgdata/0'].status.current = 'pending'
+ .storage.storage['pgdata/0'].status.current = 'attached'
+ .storage.storage['pgdata/0'].status.message = 'Successfully provisioned volume pvc-df408f49-5bad-49e8-a0ad-799994a4b6af'
- .storage.filesystems['0'].size = 0
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = 'df408f49-5bad-49e8-a0ad-799994a4b6af'
- .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = ''
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['0'].pool = 'kubernetes'
- .storage.filesystems['0'].status.current = 'pending'
- .storage.volumes['0'].size = 0
- .storage.volumes['0'].persistent = False
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-df408f49-5bad-49e8-a0ad-799994a4b6af'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-df408f49-5bad-49e8-a0ad-799994a4b6af'
+ .storage.volumes['0'].pool = 'kubernetes'
- .storage.volumes['0'].status.current = 'pending'
+ .storage.volumes['0'].status.current = 'attached'
10:40:46 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].app_status.message = 'agent initialising'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing agent'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'agent initialising'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
10:40:50 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'waiting'
- .apps['postgresql-k8s'].app_status.message = 'agent initialising'
+ .apps['postgresql-k8s'].app_status.current = 'maintenance'
+ .apps['postgresql-k8s'].app_status.message = 'installing charm software'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'agent initialising'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'allocating'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'maintenance'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running install hook'
10:40:53 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running install hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-created hook'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-joined hook for postgresql-k8s/0'
10:40:54 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-joined hook for postgresql-k8s/0'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook for postgresql-k8s/0'
10:40:56 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-peers-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-created hook'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook for postgresql-k8s/0'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
10:40:57 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running upgrade-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-created hook'
10:40:59 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running restart-relation-created hook'
10:41:00 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running restart-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running leader-elected hook'
10:41:03 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running leader-elected hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running pgdata-storage-attached hook'
10:41:05 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running pgdata-storage-attached hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running config-changed hook'
10:41:08 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running config-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running start hook'
10:41:09 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'maintenance'
- .apps['postgresql-k8s'].app_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'installing agent'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'maintenance'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'unknown'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running start hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
10:41:10 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-joined hook for spring-boot-k8s/0'
10:41:12 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-joined hook for spring-boot-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running postgresql-pebble-ready hook'
10:41:13 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running postgresql-pebble-ready hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].version = '14.19'
10:41:15 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'waiting'
- .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].app_status.current = 'unknown'
10:41:16 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'unknown'
+ .apps['postgresql-k8s'].app_status.current = 'waiting'
+ .apps['postgresql-k8s'].app_status.message = 'awaiting for cluster to start'
10:41:17 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'unknown'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for cluster to start'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for spring-boot-k8s/0'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
10:41:19 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for spring-boot-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
10:41:33 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.message = 'awaiting for cluster to start'
+ .apps['postgresql-k8s'].app_status.message = 'installing agent'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'waiting'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'awaiting for cluster to start'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
10:41:34 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].app_status.current = 'waiting'
- .apps['postgresql-k8s'].app_status.message = 'installing agent'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].app_status.message = 'Primary'
10:41:37 [32mINFO[0m cli: juju status --model testing --format json
10:41:37 [32mINFO[0m cli: juju status --model testing --format json
10:41:37 [32mINFO[0m waiting for simplesamlphp pod
10:41:38 [32mINFO[0m waiting for simplesamlphp pod
10:41:39 [32mINFO[0m waiting for simplesamlphp pod
10:41:40 [32mINFO[0m waiting for simplesamlphp pod
10:41:41 [32mINFO[0m waiting for simplesamlphp pod
10:41:42 [32mINFO[0m waiting for simplesamlphp pod
10:41:43 [32mINFO[0m waiting for simplesamlphp pod
10:41:44 [32mINFO[0m waiting for simplesamlphp pod
10:41:45 [32mINFO[0m waiting for simplesamlphp pod
10:41:46 [32mINFO[0m waiting for simplesamlphp pod
10:41:47 [32mINFO[0m waiting for simplesamlphp pod
10:41:48 [32mINFO[0m waiting for simplesamlphp pod
10:41:49 [32mINFO[0m waiting for simplesamlphp pod
10:41:50 [32mINFO[0m simplesamlphp running at 10.1.110.141
10:41:50 [32mINFO[0m cli: juju deploy --model testing saml-integrator --channel latest/stable --config entity_id=http://10.1.110.141:8080/simplesaml/saml2/idp/metadata.php --config metadata_url=http://10.1.110.141:8080/simplesaml/saml2/idp/metadata.php --trust
10:41:53 [32mINFO[0m cli: juju integrate --model testing spring-boot-k8s saml-integrator
10:41:53 [32mINFO[0m wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-67728-microk8s'
+ .model.cloud = 'microk8s'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 684
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/edge'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].provider_id = '438e13fc-0c9e-4a53-afc8-493e40bffebb'
+ .apps['postgresql-k8s'].address = '10.152.183.171'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'spring-boot-k8s'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.110.140'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['postgresql-k8s'].version = '14.19'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['ldap'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['saml-integrator'].charm = 'saml-integrator'
+ .apps['saml-integrator'].charm_origin = 'charmhub'
+ .apps['saml-integrator'].charm_name = 'saml-integrator'
+ .apps['saml-integrator'].charm_rev = 66
+ .apps['saml-integrator'].exposed = False
+ .apps['saml-integrator'].base.name = 'ubuntu'
+ .apps['saml-integrator'].base.channel = '22.04'
+ .apps['saml-integrator'].charm_channel = 'latest/stable'
+ .apps['saml-integrator'].scale = 1
+ .apps['saml-integrator'].app_status.current = 'waiting'
+ .apps['saml-integrator'].app_status.message = 'installing agent'
+ .apps['saml-integrator'].relations['saml'][0].related_app = 'spring-boot-k8s'
+ .apps['saml-integrator'].relations['saml'][0].interface = 'saml'
+ .apps['saml-integrator'].relations['saml'][0].scope = 'global'
+ .apps['saml-integrator'].units['saml-integrator/0'].workload_status.current = 'waiting'
+ .apps['saml-integrator'].units['saml-integrator/0'].workload_status.message = 'installing agent'
+ .apps['saml-integrator'].units['saml-integrator/0'].juju_status.current = 'allocating'
+ .apps['saml-integrator'].endpoint_bindings[''] = 'alpha'
+ .apps['saml-integrator'].endpoint_bindings['saml'] = 'alpha'
+ .apps['spring-boot-k8s'].charm = 'local:spring-boot-k8s-0'
+ .apps['spring-boot-k8s'].charm_origin = 'local'
+ .apps['spring-boot-k8s'].charm_name = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].charm_rev = 0
+ .apps['spring-boot-k8s'].exposed = False
+ .apps['spring-boot-k8s'].base.name = 'ubuntu'
+ .apps['spring-boot-k8s'].base.channel = '24.04'
+ .apps['spring-boot-k8s'].scale = 1
+ .apps['spring-boot-k8s'].provider_id = '56f7bfe6-1615-4cf1-93b2-4126f91394c5'
+ .apps['spring-boot-k8s'].address = '10.152.183.132'
+ .apps['spring-boot-k8s'].app_status.current = 'active'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['spring-boot-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['spring-boot-k8s'].relations['saml'][0].related_app = 'saml-integrator'
+ .apps['spring-boot-k8s'].relations['saml'][0].interface = 'saml'
+ .apps['spring-boot-k8s'].relations['saml'][0].scope = 'global'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].related_app = 'spring-boot-k8s'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['spring-boot-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'active'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running saml-relation-created hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.version = '3.6.11'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].leader = True
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].address = '10.1.110.138'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].provider_id = 'spring-boot-k8s-0'
+ .apps['spring-boot-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['spring-boot-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'attached'
+ .storage.storage['pgdata/0'].status.message = 'Successfully provisioned volume pvc-df408f49-5bad-49e8-a0ad-799994a4b6af'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = 'df408f49-5bad-49e8-a0ad-799994a4b6af'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'pgdata/0'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['0'].status.message = 'Successfully provisioned volume pvc-df408f49-5bad-49e8-a0ad-799994a4b6af'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-df408f49-5bad-49e8-a0ad-799994a4b6af'
+ .storage.volumes['0'].storage = 'pgdata/0'
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
10:41:55 [32mINFO[0m wait: status changed:
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running saml-relation-created hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
10:41:58 [32mINFO[0m wait: status changed:
+ .apps['saml-integrator'].units['saml-integrator/0'].provider_id = 'saml-integrator-0'
10:42:00 [32mINFO[0m wait: status changed:
+ .apps['saml-integrator'].provider_id = '0ae794de-e396-4f0f-84af-20a5d5b456bb'
+ .apps['saml-integrator'].address = '10.152.183.72'
+ .apps['saml-integrator'].units['saml-integrator/0'].address = '10.1.110.142'
10:42:01 [32mINFO[0m wait: status changed:
- .apps['saml-integrator'].app_status.message = 'installing agent'
+ .apps['saml-integrator'].app_status.message = 'agent initialising'
- .apps['saml-integrator'].units['saml-integrator/0'].workload_status.message = 'installing agent'
+ .apps['saml-integrator'].units['saml-integrator/0'].workload_status.message = 'agent initialising'
+ .apps['saml-integrator'].units['saml-integrator/0'].juju_status.version = '3.6.11'
+ .apps['saml-integrator'].units['saml-integrator/0'].leader = True
10:42:02 [32mINFO[0m wait: status changed:
- .apps['saml-integrator'].app_status.current = 'waiting'
- .apps['saml-integrator'].app_status.message = 'agent initialising'
+ .apps['saml-integrator'].app_status.current = 'maintenance'
+ .apps['saml-integrator'].app_status.message = 'installing charm software'
- .apps['saml-integrator'].units['saml-integrator/0'].workload_status.current = 'waiting'
- .apps['saml-integrator'].units['saml-integrator/0'].workload_status.message = 'agent initialising'
- .apps['saml-integrator'].units['saml-integrator/0'].juju_status.current = 'allocating'
+ .apps['saml-integrator'].units['saml-integrator/0'].workload_status.current = 'maintenance'
+ .apps['saml-integrator'].units['saml-integrator/0'].workload_status.message = 'installing charm software'
+ .apps['saml-integrator'].units['saml-integrator/0'].juju_status.current = 'executing'
+ .apps['saml-integrator'].units['saml-integrator/0'].juju_status.message = 'running install hook'
10:42:03 [32mINFO[0m wait: status changed:
- .apps['saml-integrator'].units['saml-integrator/0'].juju_status.message = 'running install hook'
+ .apps['saml-integrator'].units['saml-integrator/0'].juju_status.message = 'running saml-relation-created hook'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running saml-relation-joined hook for saml-integrator/0'
10:42:05 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running commands'
- .apps['saml-integrator'].app_status.current = 'maintenance'
- .apps['saml-integrator'].app_status.message = 'installing charm software'
+ .apps['saml-integrator'].app_status.current = 'active'
- .apps['saml-integrator'].units['saml-integrator/0'].workload_status.current = 'maintenance'
- .apps['saml-integrator'].units['saml-integrator/0'].workload_status.message = 'installing charm software'
- .apps['saml-integrator'].units['saml-integrator/0'].juju_status.current = 'executing'
- .apps['saml-integrator'].units['saml-integrator/0'].juju_status.message = 'running saml-relation-created hook'
+ .apps['saml-integrator'].units['saml-integrator/0'].workload_status.current = 'active'
+ .apps['saml-integrator'].units['saml-integrator/0'].juju_status.current = 'idle'
- .apps['spring-boot-k8s'].app_status.current = 'active'
+ .apps['spring-boot-k8s'].app_status.current = 'maintenance'
+ .apps['spring-boot-k8s'].app_status.message = 'Preparing service for restart'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'active'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'maintenance'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running saml-relation-joined hook for saml-integrator/0'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running saml-relation-changed hook for saml-integrator/0'
10:42:06 [32mINFO[0m wait: status changed:
- .apps['saml-integrator'].units['saml-integrator/0'].juju_status.current = 'idle'
+ .apps['saml-integrator'].units['saml-integrator/0'].juju_status.current = 'executing'
+ .apps['saml-integrator'].units['saml-integrator/0'].juju_status.message = 'running saml-relation-joined hook for spring-boot-k8s/0'
- .apps['spring-boot-k8s'].app_status.current = 'maintenance'
- .apps['spring-boot-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['spring-boot-k8s'].app_status.current = 'active'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'maintenance'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].workload_status.current = 'active'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running saml-relation-changed hook for saml-integrator/0'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running saml-relation-changed hook'
10:42:08 [32mINFO[0m wait: status changed:
- .apps['saml-integrator'].units['saml-integrator/0'].juju_status.current = 'executing'
- .apps['saml-integrator'].units['saml-integrator/0'].juju_status.message = 'running saml-relation-joined hook for spring-boot-k8s/0'
+ .apps['saml-integrator'].units['saml-integrator/0'].juju_status.current = 'idle'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'executing'
- .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.message = 'running saml-relation-changed hook'
+ .apps['spring-boot-k8s'].units['spring-boot-k8s/0'].juju_status.current = 'idle'
10:42:09 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running commands'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
10:42:09 [33mWARNING[0m Retrying (Retry(total=4, connect=4, read=5, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f477b2842b0>: Failed to establish a new connection: [Errno 111] Connection refused')': /samltest
10:42:19 [33mWARNING[0m Retrying (Retry(total=3, connect=3, read=5, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f477b285e10>: Failed to establish a new connection: [Errno 111] Connection refused')': /samltest