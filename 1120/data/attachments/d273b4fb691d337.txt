10:48:13 [32mINFO[0m cli: juju deploy --model testing /home/runner/work/paas-charm/paas-charm/fastapi-k8s_amd64.charm --config non-optional-string=string --resource app-image=ghcr.io/canonical/fastapi-app:f7b47e71f90d3f82b1a733cc68fc7e3a5c2ba2da-_0.1_amd64
10:48:16 [32mINFO[0m cli: juju status --model testing --format json
10:48:16 [32mINFO[0m postgresql-k8s already deployed
10:48:16 [32mINFO[0m cli: juju integrate --model testing fastapi-k8s postgresql-k8s:database
10:48:17 [32mINFO[0m wait: status changed:
+ .model.name = 'testing'
+ .model.type = 'caas'
+ .model.controller = 'github-pr-67728-microk8s'
+ .model.cloud = 'microk8s'
+ .model.version = '3.6.11'
+ .model.region = 'localhost'
+ .model.model_status.current = 'available'
+ .apps['django-k8s'].charm = 'local:django-k8s-0'
+ .apps['django-k8s'].charm_origin = 'local'
+ .apps['django-k8s'].charm_name = 'django-k8s'
+ .apps['django-k8s'].charm_rev = 0
+ .apps['django-k8s'].exposed = False
+ .apps['django-k8s'].base.name = 'ubuntu'
+ .apps['django-k8s'].base.channel = '22.04'
+ .apps['django-k8s'].scale = 1
+ .apps['django-k8s'].provider_id = '4b1c8ec8-192b-460f-add5-5db6f3bd748b'
+ .apps['django-k8s'].address = '10.152.183.247'
+ .apps['django-k8s'].app_status.current = 'active'
+ .apps['django-k8s'].relations['ingress'][0].related_app = 'traefik-public'
+ .apps['django-k8s'].relations['ingress'][0].interface = 'ingress'
+ .apps['django-k8s'].relations['ingress'][0].scope = 'global'
+ .apps['django-k8s'].relations['oidc'][0].related_app = 'hydra'
+ .apps['django-k8s'].relations['oidc'][0].interface = 'oauth'
+ .apps['django-k8s'].relations['oidc'][0].scope = 'global'
+ .apps['django-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['django-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['django-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['django-k8s'].relations['secret-storage'][0].related_app = 'django-k8s'
+ .apps['django-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['django-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['django-k8s'].units['django-k8s/0'].workload_status.current = 'active'
+ .apps['django-k8s'].units['django-k8s/0'].juju_status.current = 'idle'
+ .apps['django-k8s'].units['django-k8s/0'].juju_status.version = '3.6.11'
+ .apps['django-k8s'].units['django-k8s/0'].leader = True
+ .apps['django-k8s'].units['django-k8s/0'].address = '10.1.110.150'
+ .apps['django-k8s'].units['django-k8s/0'].provider_id = 'django-k8s-0'
+ .apps['django-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['django-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['django-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['django-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['django-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['django-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['django-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['django-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['django-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['django-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['django-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['django-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['expressjs-k8s'].charm = 'local:expressjs-k8s-0'
+ .apps['expressjs-k8s'].charm_origin = 'local'
+ .apps['expressjs-k8s'].charm_name = 'expressjs-k8s'
+ .apps['expressjs-k8s'].charm_rev = 0
+ .apps['expressjs-k8s'].exposed = False
+ .apps['expressjs-k8s'].base.name = 'ubuntu'
+ .apps['expressjs-k8s'].base.channel = '24.04'
+ .apps['expressjs-k8s'].scale = 1
+ .apps['expressjs-k8s'].provider_id = 'e0885082-b4c6-4eb3-96ed-2ac37b7c5f45'
+ .apps['expressjs-k8s'].address = '10.152.183.90'
+ .apps['expressjs-k8s'].app_status.current = 'active'
+ .apps['expressjs-k8s'].relations['ingress'][0].related_app = 'traefik-public'
+ .apps['expressjs-k8s'].relations['ingress'][0].interface = 'ingress'
+ .apps['expressjs-k8s'].relations['ingress'][0].scope = 'global'
+ .apps['expressjs-k8s'].relations['oidc'][0].related_app = 'hydra'
+ .apps['expressjs-k8s'].relations['oidc'][0].interface = 'oauth'
+ .apps['expressjs-k8s'].relations['oidc'][0].scope = 'global'
+ .apps['expressjs-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['expressjs-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['expressjs-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['expressjs-k8s'].relations['secret-storage'][0].related_app = 'expressjs-k8s'
+ .apps['expressjs-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['expressjs-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['expressjs-k8s'].units['expressjs-k8s/0'].workload_status.current = 'active'
+ .apps['expressjs-k8s'].units['expressjs-k8s/0'].juju_status.current = 'idle'
+ .apps['expressjs-k8s'].units['expressjs-k8s/0'].juju_status.version = '3.6.11'
+ .apps['expressjs-k8s'].units['expressjs-k8s/0'].leader = True
+ .apps['expressjs-k8s'].units['expressjs-k8s/0'].address = '10.1.110.151'
+ .apps['expressjs-k8s'].units['expressjs-k8s/0'].provider_id = 'expressjs-k8s-0'
+ .apps['expressjs-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['expressjs-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['expressjs-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['expressjs-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['expressjs-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['expressjs-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['expressjs-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['expressjs-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['expressjs-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['expressjs-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['expressjs-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['expressjs-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['fastapi-k8s'].charm = 'local:fastapi-k8s-0'
+ .apps['fastapi-k8s'].charm_origin = 'local'
+ .apps['fastapi-k8s'].charm_name = 'fastapi-k8s'
+ .apps['fastapi-k8s'].charm_rev = 0
+ .apps['fastapi-k8s'].exposed = False
+ .apps['fastapi-k8s'].base.name = 'ubuntu'
+ .apps['fastapi-k8s'].base.channel = '24.04'
+ .apps['fastapi-k8s'].scale = 1
+ .apps['fastapi-k8s'].app_status.current = 'waiting'
+ .apps['fastapi-k8s'].app_status.message = 'installing agent'
+ .apps['fastapi-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['fastapi-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['fastapi-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['fastapi-k8s'].relations['secret-storage'][0].related_app = 'fastapi-k8s'
+ .apps['fastapi-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['fastapi-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'waiting'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'installing agent'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.current = 'allocating'
+ .apps['fastapi-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['fastapi-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['fastapi-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['fastapi-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['fastapi-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['fastapi-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['fastapi-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['fastapi-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['fastapi-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['fastapi-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['fastapi-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['fastapi-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['flask-k8s'].charm = 'local:flask-k8s-0'
+ .apps['flask-k8s'].charm_origin = 'local'
+ .apps['flask-k8s'].charm_name = 'flask-k8s'
+ .apps['flask-k8s'].charm_rev = 0
+ .apps['flask-k8s'].exposed = False
+ .apps['flask-k8s'].base.name = 'ubuntu'
+ .apps['flask-k8s'].base.channel = '22.04'
+ .apps['flask-k8s'].scale = 1
+ .apps['flask-k8s'].provider_id = 'a507f800-0793-4854-a533-e7913e313c81'
+ .apps['flask-k8s'].address = '10.152.183.171'
+ .apps['flask-k8s'].app_status.current = 'active'
+ .apps['flask-k8s'].relations['ingress'][0].related_app = 'traefik-public'
+ .apps['flask-k8s'].relations['ingress'][0].interface = 'ingress'
+ .apps['flask-k8s'].relations['ingress'][0].scope = 'global'
+ .apps['flask-k8s'].relations['oidc'][0].related_app = 'hydra'
+ .apps['flask-k8s'].relations['oidc'][0].interface = 'oauth'
+ .apps['flask-k8s'].relations['oidc'][0].scope = 'global'
+ .apps['flask-k8s'].relations['secret-storage'][0].related_app = 'flask-k8s'
+ .apps['flask-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['flask-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['flask-k8s'].units['flask-k8s/0'].workload_status.current = 'active'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.current = 'idle'
+ .apps['flask-k8s'].units['flask-k8s/0'].juju_status.version = '3.6.11'
+ .apps['flask-k8s'].units['flask-k8s/0'].leader = True
+ .apps['flask-k8s'].units['flask-k8s/0'].address = '10.1.110.149'
+ .apps['flask-k8s'].units['flask-k8s/0'].provider_id = 'flask-k8s-0'
+ .apps['flask-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mongodb'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['mysql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['rabbitmq'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['redis'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['s3'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['saml'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['flask-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['go-k8s'].charm = 'local:go-k8s-0'
+ .apps['go-k8s'].charm_origin = 'local'
+ .apps['go-k8s'].charm_name = 'go-k8s'
+ .apps['go-k8s'].charm_rev = 0
+ .apps['go-k8s'].exposed = False
+ .apps['go-k8s'].base.name = 'ubuntu'
+ .apps['go-k8s'].base.channel = '24.04'
+ .apps['go-k8s'].scale = 1
+ .apps['go-k8s'].provider_id = '748a14c5-27b8-4059-88a5-520b862a25e6'
+ .apps['go-k8s'].address = '10.152.183.218'
+ .apps['go-k8s'].app_status.current = 'active'
+ .apps['go-k8s'].relations['ingress'][0].related_app = 'traefik-public'
+ .apps['go-k8s'].relations['ingress'][0].interface = 'ingress'
+ .apps['go-k8s'].relations['ingress'][0].scope = 'global'
+ .apps['go-k8s'].relations['oidc'][0].related_app = 'hydra'
+ .apps['go-k8s'].relations['oidc'][0].interface = 'oauth'
+ .apps['go-k8s'].relations['oidc'][0].scope = 'global'
+ .apps['go-k8s'].relations['postgresql'][0].related_app = 'postgresql-k8s'
+ .apps['go-k8s'].relations['postgresql'][0].interface = 'postgresql_client'
+ .apps['go-k8s'].relations['postgresql'][0].scope = 'global'
+ .apps['go-k8s'].relations['secret-storage'][0].related_app = 'go-k8s'
+ .apps['go-k8s'].relations['secret-storage'][0].interface = 'secret-storage'
+ .apps['go-k8s'].relations['secret-storage'][0].scope = 'global'
+ .apps['go-k8s'].units['go-k8s/0'].workload_status.current = 'active'
+ .apps['go-k8s'].units['go-k8s/0'].juju_status.current = 'idle'
+ .apps['go-k8s'].units['go-k8s/0'].juju_status.version = '3.6.11'
+ .apps['go-k8s'].units['go-k8s/0'].leader = True
+ .apps['go-k8s'].units['go-k8s/0'].address = '10.1.110.152'
+ .apps['go-k8s'].units['go-k8s/0'].provider_id = 'go-k8s-0'
+ .apps['go-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['go-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['go-k8s'].endpoint_bindings['http-proxy'] = 'alpha'
+ .apps['go-k8s'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['go-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['go-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['go-k8s'].endpoint_bindings['oidc'] = 'alpha'
+ .apps['go-k8s'].endpoint_bindings['openfga'] = 'alpha'
+ .apps['go-k8s'].endpoint_bindings['postgresql'] = 'alpha'
+ .apps['go-k8s'].endpoint_bindings['secret-storage'] = 'alpha'
+ .apps['go-k8s'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['go-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['hydra'].charm = 'hydra'
+ .apps['hydra'].charm_origin = 'charmhub'
+ .apps['hydra'].charm_name = 'hydra'
+ .apps['hydra'].charm_rev = 339
+ .apps['hydra'].exposed = False
+ .apps['hydra'].base.name = 'ubuntu'
+ .apps['hydra'].base.channel = '22.04'
+ .apps['hydra'].charm_channel = 'latest/edge'
+ .apps['hydra'].scale = 1
+ .apps['hydra'].provider_id = 'fb269057-5c35-4fa5-a21a-9804ba535e58'
+ .apps['hydra'].address = '10.152.183.175'
+ .apps['hydra'].app_status.current = 'active'
+ .apps['hydra'].relations['admin-ingress'][0].related_app = 'traefik-admin'
+ .apps['hydra'].relations['admin-ingress'][0].interface = 'ingress'
+ .apps['hydra'].relations['admin-ingress'][0].scope = 'global'
+ .apps['hydra'].relations['hydra'][0].related_app = 'hydra'
+ .apps['hydra'].relations['hydra'][0].interface = 'hydra_peers'
+ .apps['hydra'].relations['hydra'][0].scope = 'global'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['hydra'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].related_app = 'kratos'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].interface = 'hydra_endpoints'
+ .apps['hydra'].relations['hydra-endpoint-info'][1].scope = 'global'
+ .apps['hydra'].relations['oauth'][0].related_app = 'django-k8s'
+ .apps['hydra'].relations['oauth'][0].interface = 'oauth'
+ .apps['hydra'].relations['oauth'][0].scope = 'global'
+ .apps['hydra'].relations['oauth'][1].related_app = 'expressjs-k8s'
+ .apps['hydra'].relations['oauth'][1].interface = 'oauth'
+ .apps['hydra'].relations['oauth'][1].scope = 'global'
+ .apps['hydra'].relations['oauth'][2].related_app = 'flask-k8s'
+ .apps['hydra'].relations['oauth'][2].interface = 'oauth'
+ .apps['hydra'].relations['oauth'][2].scope = 'global'
+ .apps['hydra'].relations['oauth'][3].related_app = 'go-k8s'
+ .apps['hydra'].relations['oauth'][3].interface = 'oauth'
+ .apps['hydra'].relations['oauth'][3].scope = 'global'
+ .apps['hydra'].relations['pg-database'][0].related_app = 'postgresql-k8s'
+ .apps['hydra'].relations['pg-database'][0].interface = 'postgresql_client'
+ .apps['hydra'].relations['pg-database'][0].scope = 'global'
+ .apps['hydra'].relations['public-ingress'][0].related_app = 'traefik-public'
+ .apps['hydra'].relations['public-ingress'][0].interface = 'ingress'
+ .apps['hydra'].relations['public-ingress'][0].scope = 'global'
+ .apps['hydra'].relations['ui-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['hydra'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['hydra'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['hydra'].units['hydra/0'].workload_status.current = 'active'
+ .apps['hydra'].units['hydra/0'].juju_status.current = 'idle'
+ .apps['hydra'].units['hydra/0'].juju_status.version = '3.6.11'
+ .apps['hydra'].units['hydra/0'].leader = True
+ .apps['hydra'].units['hydra/0'].address = '10.1.110.138'
+ .apps['hydra'].units['hydra/0'].provider_id = 'hydra-0'
+ .apps['hydra'].version = 'v2.3.0'
+ .apps['hydra'].endpoint_bindings[''] = 'alpha'
+ .apps['hydra'].endpoint_bindings['admin-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['hydra'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['internal-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['logging'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['oauth'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['pg-database'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['public-ingress'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['hydra'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].charm = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].charm_origin = 'charmhub'
+ .apps['identity-platform-login-ui-operator'].charm_name = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].charm_rev = 146
+ .apps['identity-platform-login-ui-operator'].exposed = False
+ .apps['identity-platform-login-ui-operator'].base.name = 'ubuntu'
+ .apps['identity-platform-login-ui-operator'].base.channel = '22.04'
+ .apps['identity-platform-login-ui-operator'].charm_channel = 'latest/edge'
+ .apps['identity-platform-login-ui-operator'].scale = 1
+ .apps['identity-platform-login-ui-operator'].provider_id = '3e2dac2b-95fd-4157-95ce-a74fdb6cf065'
+ .apps['identity-platform-login-ui-operator'].address = '10.152.183.79'
+ .apps['identity-platform-login-ui-operator'].app_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].related_app = 'hydra'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].interface = 'identity_platform_login_ui_peers'
+ .apps['identity-platform-login-ui-operator'].relations['identity-platform-login-ui'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].related_app = 'traefik-public'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].interface = 'ingress'
+ .apps['identity-platform-login-ui-operator'].relations['ingress'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].related_app = 'kratos'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].interface = 'kratos_info'
+ .apps['identity-platform-login-ui-operator'].relations['kratos-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].related_app = 'hydra'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].related_app = 'kratos'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].interface = 'login_ui_endpoints'
+ .apps['identity-platform-login-ui-operator'].relations['ui-endpoint-info'][1].scope = 'global'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].workload_status.current = 'active'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.current = 'idle'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].juju_status.version = '3.6.11'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].leader = True
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].address = '10.1.110.140'
+ .apps['identity-platform-login-ui-operator'].units['identity-platform-login-ui-operator/0'].provider_id = 'identity-platform-login-ui-operator-0'
+ .apps['identity-platform-login-ui-operator'].version = '0.23.0'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings[''] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['identity-platform-login-ui'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['kratos-info'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['logging'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['identity-platform-login-ui-operator'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['kratos'].charm = 'kratos'
+ .apps['kratos'].charm_origin = 'charmhub'
+ .apps['kratos'].charm_name = 'kratos'
+ .apps['kratos'].charm_rev = 500
+ .apps['kratos'].exposed = False
+ .apps['kratos'].base.name = 'ubuntu'
+ .apps['kratos'].base.channel = '22.04'
+ .apps['kratos'].charm_channel = 'latest/edge'
+ .apps['kratos'].scale = 1
+ .apps['kratos'].provider_id = '620dfed5-a81f-4853-a92e-5c42280514d7'
+ .apps['kratos'].address = '10.152.183.75'
+ .apps['kratos'].app_status.current = 'active'
+ .apps['kratos'].relations['admin-ingress'][0].related_app = 'traefik-admin'
+ .apps['kratos'].relations['admin-ingress'][0].interface = 'ingress'
+ .apps['kratos'].relations['admin-ingress'][0].scope = 'global'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].related_app = 'hydra'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].interface = 'hydra_endpoints'
+ .apps['kratos'].relations['hydra-endpoint-info'][0].scope = 'global'
+ .apps['kratos'].relations['kratos-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['kratos'].relations['kratos-info'][0].interface = 'kratos_info'
+ .apps['kratos'].relations['kratos-info'][0].scope = 'global'
+ .apps['kratos'].relations['kratos-peers'][0].related_app = 'kratos'
+ .apps['kratos'].relations['kratos-peers'][0].interface = 'kratos-peers'
+ .apps['kratos'].relations['kratos-peers'][0].scope = 'global'
+ .apps['kratos'].relations['pg-database'][0].related_app = 'postgresql-k8s'
+ .apps['kratos'].relations['pg-database'][0].interface = 'postgresql_client'
+ .apps['kratos'].relations['pg-database'][0].scope = 'global'
+ .apps['kratos'].relations['public-ingress'][0].related_app = 'traefik-public'
+ .apps['kratos'].relations['public-ingress'][0].interface = 'ingress'
+ .apps['kratos'].relations['public-ingress'][0].scope = 'global'
+ .apps['kratos'].relations['ui-endpoint-info'][0].related_app = 'identity-platform-login-ui-operator'
+ .apps['kratos'].relations['ui-endpoint-info'][0].interface = 'login_ui_endpoints'
+ .apps['kratos'].relations['ui-endpoint-info'][0].scope = 'global'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'active'
+ .apps['kratos'].units['kratos/0'].juju_status.current = 'idle'
+ .apps['kratos'].units['kratos/0'].juju_status.version = '3.6.11'
+ .apps['kratos'].units['kratos/0'].leader = True
+ .apps['kratos'].units['kratos/0'].address = '10.1.110.146'
+ .apps['kratos'].units['kratos/0'].provider_id = 'kratos-0'
+ .apps['kratos'].version = 'v1.3.1'
+ .apps['kratos'].endpoint_bindings[''] = 'alpha'
+ .apps['kratos'].endpoint_bindings['admin-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['hydra-endpoint-info'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['internal-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-external-idp'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-info'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['kratos-peers'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['logging'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['pg-database'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['public-ingress'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['smtp'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['kratos'].endpoint_bindings['ui-endpoint-info'] = 'alpha'
+ .apps['postgresql-k8s'].charm = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_origin = 'charmhub'
+ .apps['postgresql-k8s'].charm_name = 'postgresql-k8s'
+ .apps['postgresql-k8s'].charm_rev = 495
+ .apps['postgresql-k8s'].exposed = False
+ .apps['postgresql-k8s'].base.name = 'ubuntu'
+ .apps['postgresql-k8s'].base.channel = '22.04'
+ .apps['postgresql-k8s'].charm_channel = '14/stable'
+ .apps['postgresql-k8s'].scale = 1
+ .apps['postgresql-k8s'].provider_id = '05332aae-e383-4039-8c90-71fe5fdfbaa2'
+ .apps['postgresql-k8s'].address = '10.152.183.77'
+ .apps['postgresql-k8s'].app_status.current = 'active'
+ .apps['postgresql-k8s'].relations['database'][0].related_app = 'django-k8s'
+ .apps['postgresql-k8s'].relations['database'][0].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['database'][1].related_app = 'expressjs-k8s'
+ .apps['postgresql-k8s'].relations['database'][1].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][1].scope = 'global'
+ .apps['postgresql-k8s'].relations['database'][2].related_app = 'fastapi-k8s'
+ .apps['postgresql-k8s'].relations['database'][2].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][2].scope = 'global'
+ .apps['postgresql-k8s'].relations['database'][3].related_app = 'go-k8s'
+ .apps['postgresql-k8s'].relations['database'][3].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][3].scope = 'global'
+ .apps['postgresql-k8s'].relations['database'][4].related_app = 'hydra'
+ .apps['postgresql-k8s'].relations['database'][4].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][4].scope = 'global'
+ .apps['postgresql-k8s'].relations['database'][5].related_app = 'kratos'
+ .apps['postgresql-k8s'].relations['database'][5].interface = 'postgresql_client'
+ .apps['postgresql-k8s'].relations['database'][5].scope = 'global'
+ .apps['postgresql-k8s'].relations['database-peers'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['database-peers'][0].interface = 'postgresql_peers'
+ .apps['postgresql-k8s'].relations['database-peers'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['restart'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['restart'][0].interface = 'rolling_op'
+ .apps['postgresql-k8s'].relations['restart'][0].scope = 'global'
+ .apps['postgresql-k8s'].relations['upgrade'][0].related_app = 'postgresql-k8s'
+ .apps['postgresql-k8s'].relations['upgrade'][0].interface = 'upgrade'
+ .apps['postgresql-k8s'].relations['upgrade'][0].scope = 'global'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.current = 'active'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].workload_status.message = 'Primary'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.version = '3.6.11'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].leader = True
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].address = '10.1.110.145'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].provider_id = 'postgresql-k8s-0'
+ .apps['postgresql-k8s'].version = '14.15'
+ .apps['postgresql-k8s'].endpoint_bindings[''] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['database-peers'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['db-admin'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['logging'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['replication-offer'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['restart'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['s3-parameters'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['postgresql-k8s'].endpoint_bindings['upgrade'] = 'alpha'
+ .apps['self-signed-certificates'].charm = 'self-signed-certificates'
+ .apps['self-signed-certificates'].charm_origin = 'charmhub'
+ .apps['self-signed-certificates'].charm_name = 'self-signed-certificates'
+ .apps['self-signed-certificates'].charm_rev = 155
+ .apps['self-signed-certificates'].exposed = False
+ .apps['self-signed-certificates'].base.name = 'ubuntu'
+ .apps['self-signed-certificates'].base.channel = '22.04'
+ .apps['self-signed-certificates'].charm_channel = 'latest/stable'
+ .apps['self-signed-certificates'].scale = 1
+ .apps['self-signed-certificates'].provider_id = 'c5053cec-c604-4daa-8cea-a175164d80f3'
+ .apps['self-signed-certificates'].address = '10.152.183.143'
+ .apps['self-signed-certificates'].app_status.current = 'active'
+ .apps['self-signed-certificates'].relations['certificates'][0].related_app = 'traefik-admin'
+ .apps['self-signed-certificates'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['self-signed-certificates'].relations['certificates'][0].scope = 'global'
+ .apps['self-signed-certificates'].relations['certificates'][1].related_app = 'traefik-public'
+ .apps['self-signed-certificates'].relations['certificates'][1].interface = 'tls-certificates'
+ .apps['self-signed-certificates'].relations['certificates'][1].scope = 'global'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].workload_status.current = 'active'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.current = 'idle'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].juju_status.version = '3.6.11'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].leader = True
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].address = '10.1.110.144'
+ .apps['self-signed-certificates'].units['self-signed-certificates/0'].provider_id = 'self-signed-certificates-0'
+ .apps['self-signed-certificates'].endpoint_bindings[''] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['send-ca-cert'] = 'alpha'
+ .apps['self-signed-certificates'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-admin'].charm = 'traefik-k8s'
+ .apps['traefik-admin'].charm_origin = 'charmhub'
+ .apps['traefik-admin'].charm_name = 'traefik-k8s'
+ .apps['traefik-admin'].charm_rev = 176
+ .apps['traefik-admin'].exposed = False
+ .apps['traefik-admin'].base.name = 'ubuntu'
+ .apps['traefik-admin'].base.channel = '20.04'
+ .apps['traefik-admin'].charm_channel = 'latest/stable'
+ .apps['traefik-admin'].scale = 1
+ .apps['traefik-admin'].provider_id = 'ddac4563-2ca1-466f-b692-7913b2e51f99'
+ .apps['traefik-admin'].address = '10.64.140.44'
+ .apps['traefik-admin'].app_status.current = 'active'
+ .apps['traefik-admin'].relations['certificates'][0].related_app = 'self-signed-certificates'
+ .apps['traefik-admin'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['traefik-admin'].relations['certificates'][0].scope = 'global'
+ .apps['traefik-admin'].relations['ingress'][0].related_app = 'hydra'
+ .apps['traefik-admin'].relations['ingress'][0].interface = 'ingress'
+ .apps['traefik-admin'].relations['ingress'][0].scope = 'global'
+ .apps['traefik-admin'].relations['ingress'][1].related_app = 'kratos'
+ .apps['traefik-admin'].relations['ingress'][1].interface = 'ingress'
+ .apps['traefik-admin'].relations['ingress'][1].scope = 'global'
+ .apps['traefik-admin'].relations['peers'][0].related_app = 'traefik-admin'
+ .apps['traefik-admin'].relations['peers'][0].interface = 'traefik_peers'
+ .apps['traefik-admin'].relations['peers'][0].scope = 'global'
+ .apps['traefik-admin'].units['traefik-admin/0'].workload_status.current = 'active'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.current = 'idle'
+ .apps['traefik-admin'].units['traefik-admin/0'].juju_status.version = '3.6.11'
+ .apps['traefik-admin'].units['traefik-admin/0'].leader = True
+ .apps['traefik-admin'].units['traefik-admin/0'].address = '10.1.110.148'
+ .apps['traefik-admin'].units['traefik-admin/0'].provider_id = 'traefik-admin-0'
+ .apps['traefik-admin'].version = 'v2.11.0'
+ .apps['traefik-admin'].endpoint_bindings[''] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['experimental-forward-auth'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['ingress-per-unit'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['logging'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['peers'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-admin'].endpoint_bindings['traefik-route'] = 'alpha'
+ .apps['traefik-public'].charm = 'traefik-k8s'
+ .apps['traefik-public'].charm_origin = 'charmhub'
+ .apps['traefik-public'].charm_name = 'traefik-k8s'
+ .apps['traefik-public'].charm_rev = 176
+ .apps['traefik-public'].exposed = False
+ .apps['traefik-public'].base.name = 'ubuntu'
+ .apps['traefik-public'].base.channel = '20.04'
+ .apps['traefik-public'].charm_channel = 'latest/stable'
+ .apps['traefik-public'].scale = 1
+ .apps['traefik-public'].provider_id = '60a74e20-67fb-4776-a66f-fbe23536d1a9'
+ .apps['traefik-public'].address = '10.64.140.43'
+ .apps['traefik-public'].app_status.current = 'active'
+ .apps['traefik-public'].relations['certificates'][0].related_app = 'self-signed-certificates'
+ .apps['traefik-public'].relations['certificates'][0].interface = 'tls-certificates'
+ .apps['traefik-public'].relations['certificates'][0].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][0].related_app = 'django-k8s'
+ .apps['traefik-public'].relations['ingress'][0].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][0].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][1].related_app = 'expressjs-k8s'
+ .apps['traefik-public'].relations['ingress'][1].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][1].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][2].related_app = 'flask-k8s'
+ .apps['traefik-public'].relations['ingress'][2].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][2].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][3].related_app = 'go-k8s'
+ .apps['traefik-public'].relations['ingress'][3].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][3].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][4].related_app = 'hydra'
+ .apps['traefik-public'].relations['ingress'][4].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][4].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][5].related_app = 'identity-platform-login-ui-operator'
+ .apps['traefik-public'].relations['ingress'][5].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][5].scope = 'global'
+ .apps['traefik-public'].relations['ingress'][6].related_app = 'kratos'
+ .apps['traefik-public'].relations['ingress'][6].interface = 'ingress'
+ .apps['traefik-public'].relations['ingress'][6].scope = 'global'
+ .apps['traefik-public'].relations['peers'][0].related_app = 'traefik-public'
+ .apps['traefik-public'].relations['peers'][0].interface = 'traefik_peers'
+ .apps['traefik-public'].relations['peers'][0].scope = 'global'
+ .apps['traefik-public'].units['traefik-public/0'].workload_status.current = 'active'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.current = 'idle'
+ .apps['traefik-public'].units['traefik-public/0'].juju_status.version = '3.6.11'
+ .apps['traefik-public'].units['traefik-public/0'].leader = True
+ .apps['traefik-public'].units['traefik-public/0'].address = '10.1.110.143'
+ .apps['traefik-public'].units['traefik-public/0'].provider_id = 'traefik-public-0'
+ .apps['traefik-public'].version = 'v2.11.0'
+ .apps['traefik-public'].endpoint_bindings[''] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['certificates'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['experimental-forward-auth'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['grafana-dashboard'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['ingress'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['ingress-per-unit'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['logging'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['metrics-endpoint'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['peers'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['receive-ca-cert'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['tracing'] = 'alpha'
+ .apps['traefik-public'].endpoint_bindings['traefik-route'] = 'alpha'
+ .storage.storage['configurations/1'].kind = 'filesystem'
+ .storage.storage['configurations/1'].status.current = 'attached'
+ .storage.storage['configurations/1'].status.message = 'Successfully provisioned volume pvc-5ece9b4d-a994-4b3a-aa69-7a35e2dc892d'
+ .storage.storage['configurations/1'].persistent = False
+ .storage.storage['configurations/1'].life = 'alive'
+ .storage.storage['configurations/1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.storage['configurations/2'].kind = 'filesystem'
+ .storage.storage['configurations/2'].status.current = 'attached'
+ .storage.storage['configurations/2'].status.message = 'Successfully provisioned volume pvc-6f5e0d00-2030-4d71-99a0-3179e514a4e8'
+ .storage.storage['configurations/2'].persistent = False
+ .storage.storage['configurations/2'].life = 'alive'
+ .storage.storage['configurations/2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.storage['pgdata/0'].kind = 'filesystem'
+ .storage.storage['pgdata/0'].status.current = 'attached'
+ .storage.storage['pgdata/0'].persistent = False
+ .storage.storage['pgdata/0'].life = 'alive'
+ .storage.storage['pgdata/0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].size = 1024
+ .storage.filesystems['0'].provider_id = '76298b9a-4f00-48ad-bb90-dca2fe0dcadd'
+ .storage.filesystems['0'].volume = '0'
+ .storage.filesystems['0'].storage = 'pgdata/0'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].mount_point = '/var/lib/postgresql/data'
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.filesystems['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.filesystems['0'].pool = 'kubernetes'
+ .storage.filesystems['0'].life = 'alive'
+ .storage.filesystems['0'].status.current = 'attached'
+ .storage.filesystems['1'].size = 1024
+ .storage.filesystems['1'].provider_id = '5ece9b4d-a994-4b3a-aa69-7a35e2dc892d'
+ .storage.filesystems['1'].volume = '1'
+ .storage.filesystems['1'].storage = 'configurations/1'
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].mount_point = '/var/lib/juju/storage/configurations/0'
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].read_only = False
+ .storage.filesystems['1'].attachments.containers['traefik-admin/0'].life = 'alive'
+ .storage.filesystems['1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.filesystems['1'].pool = 'kubernetes'
+ .storage.filesystems['1'].life = 'alive'
+ .storage.filesystems['1'].status.current = 'attached'
+ .storage.filesystems['1'].status.message = 'Successfully provisioned volume pvc-5ece9b4d-a994-4b3a-aa69-7a35e2dc892d'
+ .storage.filesystems['2'].size = 1024
+ .storage.filesystems['2'].provider_id = '6f5e0d00-2030-4d71-99a0-3179e514a4e8'
+ .storage.filesystems['2'].volume = '2'
+ .storage.filesystems['2'].storage = 'configurations/2'
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].mount_point = '/var/lib/juju/storage/configurations/0'
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].read_only = False
+ .storage.filesystems['2'].attachments.containers['traefik-public/0'].life = 'alive'
+ .storage.filesystems['2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.filesystems['2'].pool = 'kubernetes'
+ .storage.filesystems['2'].life = 'alive'
+ .storage.filesystems['2'].status.current = 'attached'
+ .storage.filesystems['2'].status.message = 'Successfully provisioned volume pvc-6f5e0d00-2030-4d71-99a0-3179e514a4e8'
+ .storage.volumes['0'].size = 1024
+ .storage.volumes['0'].persistent = True
+ .storage.volumes['0'].provider_id = 'pvc-76298b9a-4f00-48ad-bb90-dca2fe0dcadd'
+ .storage.volumes['0'].storage = 'pgdata/0'
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].read_only = False
+ .storage.volumes['0'].attachments.containers['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].attachments.units['postgresql-k8s/0'].life = 'alive'
+ .storage.volumes['0'].pool = 'kubernetes'
+ .storage.volumes['0'].life = 'alive'
+ .storage.volumes['0'].status.current = 'attached'
+ .storage.volumes['1'].size = 1024
+ .storage.volumes['1'].persistent = True
+ .storage.volumes['1'].provider_id = 'pvc-5ece9b4d-a994-4b3a-aa69-7a35e2dc892d'
+ .storage.volumes['1'].storage = 'configurations/1'
+ .storage.volumes['1'].attachments.containers['traefik-admin/0'].read_only = False
+ .storage.volumes['1'].attachments.containers['traefik-admin/0'].life = 'alive'
+ .storage.volumes['1'].attachments.units['traefik-admin/0'].life = 'alive'
+ .storage.volumes['1'].pool = 'kubernetes'
+ .storage.volumes['1'].life = 'alive'
+ .storage.volumes['1'].status.current = 'attached'
+ .storage.volumes['2'].size = 1024
+ .storage.volumes['2'].persistent = True
+ .storage.volumes['2'].provider_id = 'pvc-6f5e0d00-2030-4d71-99a0-3179e514a4e8'
+ .storage.volumes['2'].storage = 'configurations/2'
+ .storage.volumes['2'].attachments.containers['traefik-public/0'].read_only = False
+ .storage.volumes['2'].attachments.containers['traefik-public/0'].life = 'alive'
+ .storage.volumes['2'].attachments.units['traefik-public/0'].life = 'alive'
+ .storage.volumes['2'].pool = 'kubernetes'
+ .storage.volumes['2'].life = 'alive'
+ .storage.volumes['2'].status.current = 'attached'
10:48:18 [32mINFO[0m wait: status changed:
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-created hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
10:48:22 [32mINFO[0m wait: status changed:
+ .apps['fastapi-k8s'].provider_id = 'e1ad9c6f-3379-4c0e-9f1c-e50ffcb6997c'
+ .apps['fastapi-k8s'].address = '10.152.183.161'
10:48:23 [32mINFO[0m wait: status changed:
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].provider_id = 'fastapi-k8s-0'
10:48:24 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].app_status.message = 'installing agent'
+ .apps['fastapi-k8s'].app_status.message = 'agent initialising'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'installing agent'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'agent initialising'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.version = '3.6.11'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].leader = True
10:48:26 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].app_status.current = 'waiting'
- .apps['fastapi-k8s'].app_status.message = 'agent initialising'
+ .apps['fastapi-k8s'].app_status.current = 'maintenance'
+ .apps['fastapi-k8s'].app_status.message = 'installing charm software'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'waiting'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'agent initialising'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.current = 'allocating'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'maintenance'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'installing charm software'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.current = 'executing'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running install hook'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].address = '10.1.110.153'
10:48:27 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running install hook'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running postgresql-relation-created hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-joined hook for fastapi-k8s/0'
10:48:28 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running postgresql-relation-created hook'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running secret-storage-relation-created hook'
10:48:30 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running secret-storage-relation-created hook'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running app-pebble-ready hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-joined hook for fastapi-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for fastapi-k8s/0'
10:48:31 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].app_status.current = 'maintenance'
- .apps['fastapi-k8s'].app_status.message = 'installing charm software'
+ .apps['fastapi-k8s'].app_status.current = 'blocked'
+ .apps['fastapi-k8s'].app_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'maintenance'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'installing charm software'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.current = 'executing'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running app-pebble-ready hook'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'blocked'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.current = 'idle'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for fastapi-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
10:48:32 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].app_status.current = 'blocked'
- .apps['fastapi-k8s'].app_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
+ .apps['fastapi-k8s'].app_status.current = 'maintenance'
+ .apps['fastapi-k8s'].app_status.message = 'Preparing service for restart'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'blocked'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.current = 'idle'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'maintenance'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.current = 'executing'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running config-changed hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
10:48:34 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].app_status.current = 'maintenance'
- .apps['fastapi-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['fastapi-k8s'].app_status.current = 'blocked'
+ .apps['fastapi-k8s'].app_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'maintenance'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'blocked'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running config-changed hook'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running start hook'
10:48:35 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].app_status.current = 'blocked'
- .apps['fastapi-k8s'].app_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
+ .apps['fastapi-k8s'].app_status.current = 'maintenance'
+ .apps['fastapi-k8s'].app_status.message = 'Preparing service for restart'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'blocked'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'maintenance'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running start hook'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
10:48:36 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].app_status.current = 'maintenance'
- .apps['fastapi-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['fastapi-k8s'].app_status.current = 'blocked'
+ .apps['fastapi-k8s'].app_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'maintenance'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'blocked'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running postgresql-relation-changed hook'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running postgresql-relation-joined hook for postgresql-k8s/0'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for fastapi-k8s/0'
10:48:38 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].app_status.current = 'blocked'
- .apps['fastapi-k8s'].app_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
+ .apps['fastapi-k8s'].app_status.current = 'maintenance'
+ .apps['fastapi-k8s'].app_status.message = 'Preparing service for restart'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'blocked'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'maintenance'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running postgresql-relation-joined hook for postgresql-k8s/0'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running secret-storage-relation-changed hook'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'executing'
- .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.message = 'running database-relation-changed hook for fastapi-k8s/0'
+ .apps['postgresql-k8s'].units['postgresql-k8s/0'].juju_status.current = 'idle'
10:48:39 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].app_status.current = 'maintenance'
- .apps['fastapi-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['fastapi-k8s'].app_status.current = 'blocked'
+ .apps['fastapi-k8s'].app_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'maintenance'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'Preparing service for restart'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.current = 'executing'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.message = 'running secret-storage-relation-changed hook'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'blocked'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].juju_status.current = 'idle'
10:52:29 [32mINFO[0m wait: status changed:
- .apps['traefik-public'].app_status.current = 'active'
+ .apps['traefik-public'].app_status.current = 'waiting'
+ .apps['traefik-public'].app_status.message = 'installing agent'
10:52:39 [32mINFO[0m wait: status changed:
- .apps['traefik-public'].app_status.current = 'waiting'
- .apps['traefik-public'].app_status.message = 'installing agent'
+ .apps['traefik-public'].app_status.current = 'active'
10:52:45 [32mINFO[0m wait: status changed:
- .apps['kratos'].app_status.current = 'active'
+ .apps['kratos'].app_status.current = 'maintenance'
+ .apps['kratos'].app_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'active'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
10:52:47 [32mINFO[0m wait: status changed:
- .apps['kratos'].app_status.current = 'maintenance'
- .apps['kratos'].app_status.message = 'Configuring resources'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
10:52:48 [32mINFO[0m wait: status changed:
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].app_status.current = 'active'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'active'
10:53:38 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].app_status.current = 'blocked'
- .apps['fastapi-k8s'].app_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
+ .apps['fastapi-k8s'].app_status.current = 'maintenance'
+ .apps['fastapi-k8s'].app_status.message = 'Preparing service for restart'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'blocked'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'maintenance'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'Preparing service for restart'
10:53:39 [32mINFO[0m wait: status changed:
- .apps['fastapi-k8s'].app_status.current = 'maintenance'
- .apps['fastapi-k8s'].app_status.message = 'Preparing service for restart'
+ .apps['fastapi-k8s'].app_status.current = 'blocked'
+ .apps['fastapi-k8s'].app_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'maintenance'
- .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = 'Preparing service for restart'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.current = 'blocked'
+ .apps['fastapi-k8s'].units['fastapi-k8s/0'].workload_status.message = "database migration command ['bash', '-eo', 'pipefail', 'migrate.sh'] failed, will retry in next update-status"
10:57:23 [32mINFO[0m wait: status changed:
- .apps['kratos'].app_status.current = 'active'
+ .apps['kratos'].app_status.current = 'maintenance'
+ .apps['kratos'].app_status.message = 'Configuring resources'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'active'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
10:57:25 [32mINFO[0m wait: status changed:
- .apps['kratos'].app_status.current = 'maintenance'
- .apps['kratos'].app_status.message = 'Configuring resources'
+ .apps['kratos'].app_status.current = 'waiting'
+ .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'maintenance'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Configuring resources'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
+ .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
10:57:26 [32mINFO[0m wait: status changed:
- .apps['kratos'].app_status.current = 'waiting'
- .apps['kratos'].app_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].app_status.current = 'active'
- .apps['kratos'].units['kratos/0'].workload_status.current = 'waiting'
- .apps['kratos'].units['kratos/0'].workload_status.message = 'Waiting for configuration to be updated'
+ .apps['kratos'].units['kratos/0'].workload_status.current = 'active'
10:58:17 [32mINFO[0m cli: juju debug-log --model testing --limit 1000